//
//  NutritionOrderTests.swift
//  NutritionOrderTests
//
//  Generated from FHIR 0.4.0.3969 on 2015-01-23.
//  2015, SMART Platforms.
//

import XCTest
import SwiftFHIR


class NutritionOrderTests: FHIRModelTestCase
{
	func instantiateFrom(# filename: String) -> NutritionOrder {
		return instantiateFrom(json: readJSONFile(filename)!)
	}
	
	func instantiateFrom(# json: JSONDictionary) -> NutritionOrder {
		let instance = NutritionOrder(json: json)
		XCTAssertNotNil(instance, "Must have instantiated a test instance")
		return instance
	}
	
	func testNutritionOrder1() {
		let instance = testNutritionOrder1_impl()
		testNutritionOrder1_impl(json: instance.asJSON())
	}
	
	func testNutritionOrder1_impl(json: JSONDictionary? = nil) -> NutritionOrder {
		let inst = (nil != json) ? instantiateFrom(json: json!) : instantiateFrom(filename: "nutritionorder-enteralbolus-example.canonical.json")
		
		XCTAssertEqual(inst.allergyIntolerance![0].display!, "Cashew Nuts")
		XCTAssertEqual(inst.allergyIntolerance![0].reference!, "AllergyIntolerance/example")
		XCTAssertEqual(inst.dateTime!.description, "2014-09-17")
		XCTAssertEqual(inst.encounter!.display!, "Inpatient")
		XCTAssertEqual(inst.encounter!.reference!, "Encounter/example")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].code!, "227493005")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].display!, "Cashew Nut")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].version!, "20140730")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].code!, "dairy-free")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].system!.absoluteString!, "http://hl7.org/fhir/diet")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].valueSet!.display!, "PatientDiet")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].valueSet!.reference!, "http://hl7.org/fhir/vs/encounter-diet")
		XCTAssertEqual(inst.identifier![0].system!.absoluteString!, "http://www.acme.org/nutritionorders")
		XCTAssertEqual(inst.identifier![0].value!, "123")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveName!, "Acme Additive")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveType!.coding![0].code!, "427298002")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveType!.coding![0].display!, "Enteral dietary supplement")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveType!.coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveType!.coding![0].valueSet!.display!, "EnteralFormulaAdditiveType")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveType!.coding![0].valueSet!.reference!, "http://hl7.org/fhir/vs/entformula-additive")
		XCTAssertEqual(inst.item![0].enteralFormula!.baseFormulaName!, "Acme High Protein Formula")
		XCTAssertEqual(inst.item![0].enteralFormula!.baseFormulaType!.coding![0].code!, "659311000124118")
		XCTAssertEqual(inst.item![0].enteralFormula!.baseFormulaType!.coding![0].display!, "Adult high protein formula")
		XCTAssertEqual(inst.item![0].enteralFormula!.baseFormulaType!.coding![0].system!.absoluteString!, "http://usextension/snomed.info/sct")
		XCTAssertEqual(inst.item![0].enteralFormula!.caloricDensity!.code!, "cal/mL")
		XCTAssertEqual(inst.item![0].enteralFormula!.caloricDensity!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.item![0].enteralFormula!.caloricDensity!.units!, "calories per milliliter")
		XCTAssertEqual(inst.item![0].enteralFormula!.caloricDensity!.value!, NSDecimalNumber(string: "1.5"))
		XCTAssertEqual(inst.item![0].enteralFormula!.maxVolumeToDeliver!.code!, "mL")
		XCTAssertEqual(inst.item![0].enteralFormula!.maxVolumeToDeliver!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.item![0].enteralFormula!.maxVolumeToDeliver!.units!, "milliliter")
		XCTAssertEqual(inst.item![0].enteralFormula!.maxVolumeToDeliver!.value!, NSDecimalNumber(string: "1440"))
		XCTAssertEqual(inst.item![0].enteralFormula!.quantity!.code!, "mL")
		XCTAssertEqual(inst.item![0].enteralFormula!.quantity!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.item![0].enteralFormula!.quantity!.units!, "milliliters")
		XCTAssertEqual(inst.item![0].enteralFormula!.quantity!.value!, NSDecimalNumber(string: "240"))
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.denominator!.code!, "h")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.denominator!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.denominator!.units!, "hr")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.denominator!.value!, NSDecimalNumber(string: "4"))
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.numerator!.code!, "mL")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.numerator!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.numerator!.units!, "milliliters")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.numerator!.value!, NSDecimalNumber(string: "240"))
		XCTAssertEqual(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].code!, "GT")
		XCTAssertEqual(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].display!, "Instillation, gastrostomy tube")
		XCTAssertEqual(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].system!.absoluteString!, "http://hl7.org/fhir/v3/RouteOfAdministration")
		XCTAssertEqual(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].valueSet!.display!, "EnteralRouteOfAdministration")
		XCTAssertEqual(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].valueSet!.reference!, "http://hl7.org/fhir/vs/enteral-route")
		XCTAssertTrue(inst.item![0].isInEffect!)
		XCTAssertEqual(inst.item![0].scheduledPeriod!.start!.description, "2014-09-17")
		XCTAssertEqual(inst.orderer!.display!, "Dr Adam Careful")
		XCTAssertEqual(inst.orderer!.reference!, "Practitioner/example")
		XCTAssertEqual(inst.status!, "active")
		XCTAssertEqual(inst.subject!.display!, "Peter Chalmers")
		XCTAssertEqual(inst.subject!.reference!, "Patient/example")
		
		return inst
	}
	
	func testNutritionOrder2() {
		let instance = testNutritionOrder2_impl()
		testNutritionOrder2_impl(json: instance.asJSON())
	}
	
	func testNutritionOrder2_impl(json: JSONDictionary? = nil) -> NutritionOrder {
		let inst = (nil != json) ? instantiateFrom(json: json!) : instantiateFrom(filename: "nutritionorder-enteralbolus-example.canonical.json")
		
		XCTAssertEqual(inst.allergyIntolerance![0].display!, "Cashew Nuts")
		XCTAssertEqual(inst.allergyIntolerance![0].reference!, "AllergyIntolerance/example")
		XCTAssertEqual(inst.dateTime!.description, "2014-09-17")
		XCTAssertEqual(inst.encounter!.display!, "Inpatient")
		XCTAssertEqual(inst.encounter!.reference!, "Encounter/example")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].code!, "227493005")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].display!, "Cashew Nut")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].version!, "20140730")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].code!, "dairy-free")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].system!.absoluteString!, "http://hl7.org/fhir/diet")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].valueSet!.display!, "PatientDiet")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].valueSet!.reference!, "http://hl7.org/fhir/vs/encounter-diet")
		XCTAssertEqual(inst.identifier![0].system!.absoluteString!, "http://www.acme.org/nutritionorders")
		XCTAssertEqual(inst.identifier![0].value!, "123")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveName!, "Acme Additive")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveType!.coding![0].code!, "427298002")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveType!.coding![0].display!, "Enteral dietary supplement")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveType!.coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveType!.coding![0].valueSet!.display!, "EnteralFormulaAdditiveType")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveType!.coding![0].valueSet!.reference!, "http://hl7.org/fhir/vs/entformula-additive")
		XCTAssertEqual(inst.item![0].enteralFormula!.baseFormulaName!, "Acme High Protein Formula")
		XCTAssertEqual(inst.item![0].enteralFormula!.baseFormulaType!.coding![0].code!, "659311000124118")
		XCTAssertEqual(inst.item![0].enteralFormula!.baseFormulaType!.coding![0].display!, "Adult high protein formula")
		XCTAssertEqual(inst.item![0].enteralFormula!.baseFormulaType!.coding![0].system!.absoluteString!, "http://usextension/snomed.info/sct")
		XCTAssertEqual(inst.item![0].enteralFormula!.caloricDensity!.code!, "cal/mL")
		XCTAssertEqual(inst.item![0].enteralFormula!.caloricDensity!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.item![0].enteralFormula!.caloricDensity!.units!, "calories per milliliter")
		XCTAssertEqual(inst.item![0].enteralFormula!.caloricDensity!.value!, NSDecimalNumber(string: "1.5"))
		XCTAssertEqual(inst.item![0].enteralFormula!.maxVolumeToDeliver!.code!, "mL")
		XCTAssertEqual(inst.item![0].enteralFormula!.maxVolumeToDeliver!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.item![0].enteralFormula!.maxVolumeToDeliver!.units!, "milliliter")
		XCTAssertEqual(inst.item![0].enteralFormula!.maxVolumeToDeliver!.value!, NSDecimalNumber(string: "1440"))
		XCTAssertEqual(inst.item![0].enteralFormula!.quantity!.code!, "mL")
		XCTAssertEqual(inst.item![0].enteralFormula!.quantity!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.item![0].enteralFormula!.quantity!.units!, "milliliters")
		XCTAssertEqual(inst.item![0].enteralFormula!.quantity!.value!, NSDecimalNumber(string: "240"))
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.denominator!.code!, "h")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.denominator!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.denominator!.units!, "hr")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.denominator!.value!, NSDecimalNumber(string: "4"))
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.numerator!.code!, "mL")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.numerator!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.numerator!.units!, "milliliters")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.numerator!.value!, NSDecimalNumber(string: "240"))
		XCTAssertEqual(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].code!, "GT")
		XCTAssertEqual(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].display!, "Instillation, gastrostomy tube")
		XCTAssertEqual(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].system!.absoluteString!, "http://hl7.org/fhir/v3/RouteOfAdministration")
		XCTAssertEqual(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].valueSet!.display!, "EnteralRouteOfAdministration")
		XCTAssertEqual(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].valueSet!.reference!, "http://hl7.org/fhir/vs/enteral-route")
		XCTAssertTrue(inst.item![0].isInEffect!)
		XCTAssertEqual(inst.item![0].scheduledPeriod!.start!.description, "2014-09-17")
		XCTAssertEqual(inst.orderer!.display!, "Dr Adam Careful")
		XCTAssertEqual(inst.orderer!.reference!, "Practitioner/example")
		XCTAssertEqual(inst.status!, "active")
		XCTAssertEqual(inst.subject!.display!, "Peter Chalmers")
		XCTAssertEqual(inst.subject!.reference!, "Patient/example")
		
		return inst
	}
	
	func testNutritionOrder3() {
		let instance = testNutritionOrder3_impl()
		testNutritionOrder3_impl(json: instance.asJSON())
	}
	
	func testNutritionOrder3_impl(json: JSONDictionary? = nil) -> NutritionOrder {
		let inst = (nil != json) ? instantiateFrom(json: json!) : instantiateFrom(filename: "nutritionorder-enteralbolus-example.json")
		
		XCTAssertEqual(inst.allergyIntolerance![0].display!, "Cashew Nuts")
		XCTAssertEqual(inst.allergyIntolerance![0].reference!, "AllergyIntolerance/example")
		XCTAssertEqual(inst.dateTime!.description, "2014-09-17")
		XCTAssertEqual(inst.encounter!.display!, "Inpatient")
		XCTAssertEqual(inst.encounter!.reference!, "Encounter/example")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].code!, "227493005")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].display!, "Cashew Nut")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].version!, "20140730")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].code!, "dairy-free")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].system!.absoluteString!, "http://hl7.org/fhir/diet")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].valueSet!.display!, "PatientDiet")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].valueSet!.reference!, "http://hl7.org/fhir/vs/encounter-diet")
		XCTAssertEqual(inst.identifier![0].system!.absoluteString!, "http://www.acme.org/nutritionorders")
		XCTAssertEqual(inst.identifier![0].value!, "123")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveName!, "Acme Additive")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveType!.coding![0].code!, "427298002")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveType!.coding![0].display!, "Enteral dietary supplement")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveType!.coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveType!.coding![0].valueSet!.display!, "EnteralFormulaAdditiveType")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveType!.coding![0].valueSet!.reference!, "http://hl7.org/fhir/vs/entformula-additive")
		XCTAssertEqual(inst.item![0].enteralFormula!.baseFormulaName!, "Acme High Protein Formula")
		XCTAssertEqual(inst.item![0].enteralFormula!.baseFormulaType!.coding![0].code!, "659311000124118")
		XCTAssertEqual(inst.item![0].enteralFormula!.baseFormulaType!.coding![0].display!, "Adult high protein formula")
		XCTAssertEqual(inst.item![0].enteralFormula!.baseFormulaType!.coding![0].system!.absoluteString!, "http://usextension/snomed.info/sct")
		XCTAssertEqual(inst.item![0].enteralFormula!.caloricDensity!.code!, "cal/mL")
		XCTAssertEqual(inst.item![0].enteralFormula!.caloricDensity!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.item![0].enteralFormula!.caloricDensity!.units!, "calories per milliliter")
		XCTAssertEqual(inst.item![0].enteralFormula!.caloricDensity!.value!, NSDecimalNumber(string: "1.5"))
		XCTAssertEqual(inst.item![0].enteralFormula!.maxVolumeToDeliver!.code!, "mL")
		XCTAssertEqual(inst.item![0].enteralFormula!.maxVolumeToDeliver!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.item![0].enteralFormula!.maxVolumeToDeliver!.units!, "milliliter")
		XCTAssertEqual(inst.item![0].enteralFormula!.maxVolumeToDeliver!.value!, NSDecimalNumber(string: "1440"))
		XCTAssertEqual(inst.item![0].enteralFormula!.quantity!.code!, "mL")
		XCTAssertEqual(inst.item![0].enteralFormula!.quantity!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.item![0].enteralFormula!.quantity!.units!, "milliliters")
		XCTAssertEqual(inst.item![0].enteralFormula!.quantity!.value!, NSDecimalNumber(string: "240"))
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.denominator!.code!, "h")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.denominator!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.denominator!.units!, "hr")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.denominator!.value!, NSDecimalNumber(string: "4"))
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.numerator!.code!, "mL")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.numerator!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.numerator!.units!, "milliliters")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.numerator!.value!, NSDecimalNumber(string: "240"))
		XCTAssertEqual(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].code!, "GT")
		XCTAssertEqual(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].display!, "Instillation, gastrostomy tube")
		XCTAssertEqual(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].system!.absoluteString!, "http://hl7.org/fhir/v3/RouteOfAdministration")
		XCTAssertEqual(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].valueSet!.display!, "EnteralRouteOfAdministration")
		XCTAssertEqual(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].valueSet!.reference!, "http://hl7.org/fhir/vs/enteral-route")
		XCTAssertTrue(inst.item![0].isInEffect!)
		XCTAssertEqual(inst.item![0].scheduledPeriod!.start!.description, "2014-09-17")
		XCTAssertEqual(inst.orderer!.display!, "Dr Adam Careful")
		XCTAssertEqual(inst.orderer!.reference!, "Practitioner/example")
		XCTAssertEqual(inst.status!, "active")
		XCTAssertEqual(inst.subject!.display!, "Peter Chalmers")
		XCTAssertEqual(inst.subject!.reference!, "Patient/example")
		
		return inst
	}
	
	func testNutritionOrder4() {
		let instance = testNutritionOrder4_impl()
		testNutritionOrder4_impl(json: instance.asJSON())
	}
	
	func testNutritionOrder4_impl(json: JSONDictionary? = nil) -> NutritionOrder {
		let inst = (nil != json) ? instantiateFrom(json: json!) : instantiateFrom(filename: "nutritionorder-enteralcontinuous-example.canonical.json")
		
		XCTAssertEqual(inst.allergyIntolerance![0].display!, "Cashew Nuts")
		XCTAssertEqual(inst.allergyIntolerance![0].reference!, "AllergyIntolerance/example")
		XCTAssertEqual(inst.dateTime!.description, "2014-09-17")
		XCTAssertEqual(inst.encounter!.display!, "Inpatient")
		XCTAssertEqual(inst.encounter!.reference!, "Encounter/example")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].code!, "227493005")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].display!, "Cashew Nut")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].version!, "20140730")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].code!, "dairy-free")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].system!.absoluteString!, "http://hl7.org/fhir/diet")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].valueSet!.display!, "PatientDiet")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].valueSet!.reference!, "http://hl7.org/fhir/vs/encounter-diet")
		XCTAssertEqual(inst.identifier![0].system!.absoluteString!, "http://www.acme.org/nutritionorders")
		XCTAssertEqual(inst.identifier![0].value!, "123")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveName!, "Acme MCT Oil")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveType!.coding![0].code!, "427298002")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveType!.coding![0].display!, "Enteral dietary supplement")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveType!.coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveType!.coding![0].valueSet!.display!, "Medium chain triglyceride supplementation")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveType!.coding![0].valueSet!.reference!, "http://hl7.org/fhir/vs/entformula-additive")
		XCTAssertEqual(inst.item![0].enteralFormula!.administrationInstructions!, "Hold feedings from 7 pm to 7 am. Add MCT oil to increase calories from 1.0 cal/mL to 1.5 cal/mL")
		XCTAssertEqual(inst.item![0].enteralFormula!.baseFormulaName!, " Acme Diabetes Formula")
		XCTAssertEqual(inst.item![0].enteralFormula!.baseFormulaType!.coding![0].code!, "6547210000124112")
		XCTAssertEqual(inst.item![0].enteralFormula!.baseFormulaType!.coding![0].display!, "Diabetic specialty enteral formula")
		XCTAssertEqual(inst.item![0].enteralFormula!.baseFormulaType!.coding![0].system!.absoluteString!, "http://snomed-us.info/sct")
		XCTAssertEqual(inst.item![0].enteralFormula!.caloricDensity!.code!, "cal/mL")
		XCTAssertEqual(inst.item![0].enteralFormula!.caloricDensity!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.item![0].enteralFormula!.caloricDensity!.units!, "calories per milliliter")
		XCTAssertEqual(inst.item![0].enteralFormula!.caloricDensity!.value!, NSDecimalNumber(string: "1"))
		XCTAssertEqual(inst.item![0].enteralFormula!.maxVolumeToDeliver!.code!, "mL")
		XCTAssertEqual(inst.item![0].enteralFormula!.maxVolumeToDeliver!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.item![0].enteralFormula!.maxVolumeToDeliver!.units!, "milliliter")
		XCTAssertEqual(inst.item![0].enteralFormula!.maxVolumeToDeliver!.value!, NSDecimalNumber(string: "880"))
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.denominator!.code!, "h")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.denominator!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.denominator!.units!, "hr")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.denominator!.value!, NSDecimalNumber(string: "1"))
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.numerator!.code!, "mL")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.numerator!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.numerator!.units!, "millilters")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.numerator!.value!, NSDecimalNumber(string: "60"))
		XCTAssertEqual(inst.item![0].enteralFormula!.rateAdjustment!.units!, "milliliters every 4 hours")
		XCTAssertEqual(inst.item![0].enteralFormula!.rateAdjustment!.value!, NSDecimalNumber(string: "10"))
		XCTAssertEqual(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].code!, "NGT")
		XCTAssertEqual(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].display!, "Instillation, nasogastrostomy tube")
		XCTAssertEqual(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].system!.absoluteString!, "http://hl7.org/fhir/v3/RouteOfAdministration")
		XCTAssertEqual(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].valueSet!.display!, "EnteralRouteOfAdministration")
		XCTAssertEqual(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].valueSet!.reference!, "http://hl7.org/fhir/vs/enteral-route")
		XCTAssertTrue(inst.item![0].isInEffect!)
		XCTAssertEqual(inst.item![0].scheduledPeriod!.start!.description, "2014-09-17")
		XCTAssertEqual(inst.orderer!.display!, "Peter Chalmers")
		XCTAssertEqual(inst.orderer!.reference!, "Patient/example")
		XCTAssertEqual(inst.status!, "active")
		XCTAssertEqual(inst.subject!.display!, "Dr Adam Careful")
		XCTAssertEqual(inst.subject!.reference!, "Practitioner/example")
		
		return inst
	}
	
	func testNutritionOrder5() {
		let instance = testNutritionOrder5_impl()
		testNutritionOrder5_impl(json: instance.asJSON())
	}
	
	func testNutritionOrder5_impl(json: JSONDictionary? = nil) -> NutritionOrder {
		let inst = (nil != json) ? instantiateFrom(json: json!) : instantiateFrom(filename: "nutritionorder-enteralcontinuous-example.json")
		
		XCTAssertEqual(inst.allergyIntolerance![0].display!, "Cashew Nuts")
		XCTAssertEqual(inst.allergyIntolerance![0].reference!, "AllergyIntolerance/example")
		XCTAssertEqual(inst.dateTime!.description, "2014-09-17")
		XCTAssertEqual(inst.encounter!.display!, "Inpatient")
		XCTAssertEqual(inst.encounter!.reference!, "Encounter/example")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].code!, "227493005")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].display!, "Cashew Nut")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].version!, "20140730")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].code!, "dairy-free")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].system!.absoluteString!, "http://hl7.org/fhir/diet")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].valueSet!.display!, "PatientDiet")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].valueSet!.reference!, "http://hl7.org/fhir/vs/encounter-diet")
		XCTAssertEqual(inst.identifier![0].system!.absoluteString!, "http://www.acme.org/nutritionorders")
		XCTAssertEqual(inst.identifier![0].value!, "123")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveName!, "Acme MCT Oil")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveType!.coding![0].code!, "427298002")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveType!.coding![0].display!, "Enteral dietary supplement")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveType!.coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveType!.coding![0].valueSet!.display!, "Medium chain triglyceride supplementation")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveType!.coding![0].valueSet!.reference!, "http://hl7.org/fhir/vs/entformula-additive")
		XCTAssertEqual(inst.item![0].enteralFormula!.administrationInstructions!, "Hold feedings from 7 pm to 7 am. Add MCT oil to increase calories from 1.0 cal/mL to 1.5 cal/mL")
		XCTAssertEqual(inst.item![0].enteralFormula!.baseFormulaName!, " Acme Diabetes Formula")
		XCTAssertEqual(inst.item![0].enteralFormula!.baseFormulaType!.coding![0].code!, "6547210000124112")
		XCTAssertEqual(inst.item![0].enteralFormula!.baseFormulaType!.coding![0].display!, "Diabetic specialty enteral formula")
		XCTAssertEqual(inst.item![0].enteralFormula!.baseFormulaType!.coding![0].system!.absoluteString!, "http://snomed-us.info/sct")
		XCTAssertEqual(inst.item![0].enteralFormula!.caloricDensity!.code!, "cal/mL")
		XCTAssertEqual(inst.item![0].enteralFormula!.caloricDensity!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.item![0].enteralFormula!.caloricDensity!.units!, "calories per milliliter")
		XCTAssertEqual(inst.item![0].enteralFormula!.caloricDensity!.value!, NSDecimalNumber(string: "1"))
		XCTAssertEqual(inst.item![0].enteralFormula!.maxVolumeToDeliver!.code!, "mL")
		XCTAssertEqual(inst.item![0].enteralFormula!.maxVolumeToDeliver!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.item![0].enteralFormula!.maxVolumeToDeliver!.units!, "milliliter")
		XCTAssertEqual(inst.item![0].enteralFormula!.maxVolumeToDeliver!.value!, NSDecimalNumber(string: "880"))
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.denominator!.code!, "h")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.denominator!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.denominator!.units!, "hr")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.denominator!.value!, NSDecimalNumber(string: "1"))
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.numerator!.code!, "mL")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.numerator!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.numerator!.units!, "millilters")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.numerator!.value!, NSDecimalNumber(string: "60"))
		XCTAssertEqual(inst.item![0].enteralFormula!.rateAdjustment!.units!, "milliliters every 4 hours")
		XCTAssertEqual(inst.item![0].enteralFormula!.rateAdjustment!.value!, NSDecimalNumber(string: "10"))
		XCTAssertEqual(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].code!, "NGT")
		XCTAssertEqual(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].display!, "Instillation, nasogastrostomy tube")
		XCTAssertEqual(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].system!.absoluteString!, "http://hl7.org/fhir/v3/RouteOfAdministration")
		XCTAssertEqual(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].valueSet!.display!, "EnteralRouteOfAdministration")
		XCTAssertEqual(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].valueSet!.reference!, "http://hl7.org/fhir/vs/enteral-route")
		XCTAssertTrue(inst.item![0].isInEffect!)
		XCTAssertEqual(inst.item![0].scheduledPeriod!.start!.description, "2014-09-17")
		XCTAssertEqual(inst.orderer!.display!, "Peter Chalmers")
		XCTAssertEqual(inst.orderer!.reference!, "Patient/example")
		XCTAssertEqual(inst.status!, "active")
		XCTAssertEqual(inst.subject!.display!, "Dr Adam Careful")
		XCTAssertEqual(inst.subject!.reference!, "Practitioner/example")
		
		return inst
	}
	
	func testNutritionOrder6() {
		let instance = testNutritionOrder6_impl()
		testNutritionOrder6_impl(json: instance.asJSON())
	}
	
	func testNutritionOrder6_impl(json: JSONDictionary? = nil) -> NutritionOrder {
		let inst = (nil != json) ? instantiateFrom(json: json!) : instantiateFrom(filename: "nutritionorder-example.canonical.json")
		
		XCTAssertEqual(inst.dateTime!.description, "2014-09-17")
		XCTAssertTrue(inst.item![0].isInEffect!)
		XCTAssertEqual(inst.item![0].oralDiet!.type![0].text!, "Low Calorie Diet")
		XCTAssertEqual(inst.subject!.display!, "Paula Patient Chalmers")
		
		return inst
	}
	
	func testNutritionOrder7() {
		let instance = testNutritionOrder7_impl()
		testNutritionOrder7_impl(json: instance.asJSON())
	}
	
	func testNutritionOrder7_impl(json: JSONDictionary? = nil) -> NutritionOrder {
		let inst = (nil != json) ? instantiateFrom(json: json!) : instantiateFrom(filename: "nutritionorder-example.json")
		
		XCTAssertEqual(inst.dateTime!.description, "2014-09-17")
		XCTAssertTrue(inst.item![0].isInEffect!)
		XCTAssertEqual(inst.item![0].oralDiet!.type![0].text!, "Low Calorie Diet")
		XCTAssertEqual(inst.subject!.display!, "Paula Patient Chalmers")
		
		return inst
	}
	
	func testNutritionOrder8() {
		let instance = testNutritionOrder8_impl()
		testNutritionOrder8_impl(json: instance.asJSON())
	}
	
	func testNutritionOrder8_impl(json: JSONDictionary? = nil) -> NutritionOrder {
		let inst = (nil != json) ? instantiateFrom(json: json!) : instantiateFrom(filename: "nutritionorder-infantenteral-example.canonical.json")
		
		XCTAssertEqual(inst.allergyIntolerance![0].display!, "Cashew Nuts")
		XCTAssertEqual(inst.allergyIntolerance![0].reference!, "AllergyIntolerance/example")
		XCTAssertEqual(inst.dateTime!.description, "2014-09-17")
		XCTAssertEqual(inst.encounter!.display!, "Inpatient")
		XCTAssertEqual(inst.encounter!.reference!, "Encounter/example")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].code!, "227493005")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].display!, "Cashew Nut")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].version!, "20140730")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].code!, "nut-free")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].system!.absoluteString!, "http://hl7.org/fhir/diet")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].valueSet!.display!, "PatientDiet")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].valueSet!.reference!, "http://hl7.org/fhir/vs/encounter-diet")
		XCTAssertEqual(inst.identifier![0].system!.absoluteString!, "http://www.acme.org/nutritionorders")
		XCTAssertEqual(inst.identifier![0].value!, "123")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveName!, "Acme High Carbohydrate Additive")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveType!.coding![0].code!, "226307009")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveType!.coding![0].display!, "Carbohydrate supplement")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveType!.coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveType!.coding![0].valueSet!.display!, "EnteralFormulaAdditiveType")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveType!.coding![0].valueSet!.reference!, "http://hl7.org/fhir/vs/entformula-additive")
		XCTAssertEqual(inst.item![0].enteralFormula!.administrationInstructions!, "Add high calorie high carbohydrate additive to increase cal/oz from 24 cal/oz to 27 cal/oz.")
		XCTAssertEqual(inst.item![0].enteralFormula!.baseFormulaName!, "Acme Infant Formula + Iron")
		XCTAssertEqual(inst.item![0].enteralFormula!.baseFormulaType!.coding![0].code!, "412414007")
		XCTAssertEqual(inst.item![0].enteralFormula!.baseFormulaType!.coding![0].display!, "infant formula + iron")
		XCTAssertEqual(inst.item![0].enteralFormula!.baseFormulaType!.coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.item![0].enteralFormula!.caloricDensity!.code!, "cal/[foz_us]")
		XCTAssertEqual(inst.item![0].enteralFormula!.caloricDensity!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.item![0].enteralFormula!.caloricDensity!.units!, "calories per ounce")
		XCTAssertEqual(inst.item![0].enteralFormula!.caloricDensity!.value!, NSDecimalNumber(string: "20"))
		XCTAssertEqual(inst.item![0].enteralFormula!.maxVolumeToDeliver!.code!, "[foz_us]")
		XCTAssertEqual(inst.item![0].enteralFormula!.maxVolumeToDeliver!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.item![0].enteralFormula!.maxVolumeToDeliver!.units!, "ounces")
		XCTAssertEqual(inst.item![0].enteralFormula!.maxVolumeToDeliver!.value!, NSDecimalNumber(string: "32"))
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.denominator!.code!, "h")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.denominator!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.denominator!.units!, "hr")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.denominator!.value!, NSDecimalNumber(string: "3"))
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.numerator!.code!, "[foz_us]")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.numerator!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.numerator!.units!, "oz")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.numerator!.value!, NSDecimalNumber(string: "4"))
		XCTAssertEqual(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].code!, "PO")
		XCTAssertEqual(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].display!, "Swallow, oral")
		XCTAssertTrue(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].primary!)
		XCTAssertEqual(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].system!.absoluteString!, "http://hl7.org/fhir/v3/RouteOfAdministration")
		XCTAssertEqual(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].valueSet!.display!, "EnteralRouteOfAdministration")
		XCTAssertEqual(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].valueSet!.reference!, "http://hl7.org/fhir/vs/enteral-route")
		XCTAssertTrue(inst.item![0].isInEffect!)
		XCTAssertEqual(inst.item![0].scheduledPeriod!.start!.description, "2014-09-17")
		XCTAssertEqual(inst.orderer!.display!, "Peter Chalmers")
		XCTAssertEqual(inst.orderer!.reference!, "Patient/example")
		XCTAssertEqual(inst.status!, "active")
		XCTAssertEqual(inst.subject!.display!, "Dr Adam Careful")
		XCTAssertEqual(inst.subject!.reference!, "Practitioner/example")
		
		return inst
	}
	
	func testNutritionOrder9() {
		let instance = testNutritionOrder9_impl()
		testNutritionOrder9_impl(json: instance.asJSON())
	}
	
	func testNutritionOrder9_impl(json: JSONDictionary? = nil) -> NutritionOrder {
		let inst = (nil != json) ? instantiateFrom(json: json!) : instantiateFrom(filename: "nutritionorder-infantenteral-example.json")
		
		XCTAssertEqual(inst.allergyIntolerance![0].display!, "Cashew Nuts")
		XCTAssertEqual(inst.allergyIntolerance![0].reference!, "AllergyIntolerance/example")
		XCTAssertEqual(inst.dateTime!.description, "2014-09-17")
		XCTAssertEqual(inst.encounter!.display!, "Inpatient")
		XCTAssertEqual(inst.encounter!.reference!, "Encounter/example")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].code!, "227493005")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].display!, "Cashew Nut")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].version!, "20140730")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].code!, "nut-free")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].system!.absoluteString!, "http://hl7.org/fhir/diet")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].valueSet!.display!, "PatientDiet")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].valueSet!.reference!, "http://hl7.org/fhir/vs/encounter-diet")
		XCTAssertEqual(inst.identifier![0].system!.absoluteString!, "http://www.acme.org/nutritionorders")
		XCTAssertEqual(inst.identifier![0].value!, "123")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveName!, "Acme High Carbohydrate Additive")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveType!.coding![0].code!, "226307009")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveType!.coding![0].display!, "Carbohydrate supplement")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveType!.coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveType!.coding![0].valueSet!.display!, "EnteralFormulaAdditiveType")
		XCTAssertEqual(inst.item![0].enteralFormula!.additiveType!.coding![0].valueSet!.reference!, "http://hl7.org/fhir/vs/entformula-additive")
		XCTAssertEqual(inst.item![0].enteralFormula!.administrationInstructions!, "Add high calorie high carbohydrate additive to increase cal/oz from 24 cal/oz to 27 cal/oz.")
		XCTAssertEqual(inst.item![0].enteralFormula!.baseFormulaName!, "Acme Infant Formula + Iron")
		XCTAssertEqual(inst.item![0].enteralFormula!.baseFormulaType!.coding![0].code!, "412414007")
		XCTAssertEqual(inst.item![0].enteralFormula!.baseFormulaType!.coding![0].display!, "infant formula + iron")
		XCTAssertEqual(inst.item![0].enteralFormula!.baseFormulaType!.coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.item![0].enteralFormula!.caloricDensity!.code!, "cal/[foz_us]")
		XCTAssertEqual(inst.item![0].enteralFormula!.caloricDensity!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.item![0].enteralFormula!.caloricDensity!.units!, "calories per ounce")
		XCTAssertEqual(inst.item![0].enteralFormula!.caloricDensity!.value!, NSDecimalNumber(string: "20"))
		XCTAssertEqual(inst.item![0].enteralFormula!.maxVolumeToDeliver!.code!, "[foz_us]")
		XCTAssertEqual(inst.item![0].enteralFormula!.maxVolumeToDeliver!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.item![0].enteralFormula!.maxVolumeToDeliver!.units!, "ounces")
		XCTAssertEqual(inst.item![0].enteralFormula!.maxVolumeToDeliver!.value!, NSDecimalNumber(string: "32"))
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.denominator!.code!, "h")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.denominator!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.denominator!.units!, "hr")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.denominator!.value!, NSDecimalNumber(string: "3"))
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.numerator!.code!, "[foz_us]")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.numerator!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.numerator!.units!, "oz")
		XCTAssertEqual(inst.item![0].enteralFormula!.rate!.numerator!.value!, NSDecimalNumber(string: "4"))
		XCTAssertEqual(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].code!, "PO")
		XCTAssertEqual(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].display!, "Swallow, oral")
		XCTAssertTrue(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].primary!)
		XCTAssertEqual(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].system!.absoluteString!, "http://hl7.org/fhir/v3/RouteOfAdministration")
		XCTAssertEqual(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].valueSet!.display!, "EnteralRouteOfAdministration")
		XCTAssertEqual(inst.item![0].enteralFormula!.routeofAdministration!.coding![0].valueSet!.reference!, "http://hl7.org/fhir/vs/enteral-route")
		XCTAssertTrue(inst.item![0].isInEffect!)
		XCTAssertEqual(inst.item![0].scheduledPeriod!.start!.description, "2014-09-17")
		XCTAssertEqual(inst.orderer!.display!, "Peter Chalmers")
		XCTAssertEqual(inst.orderer!.reference!, "Patient/example")
		XCTAssertEqual(inst.status!, "active")
		XCTAssertEqual(inst.subject!.display!, "Dr Adam Careful")
		XCTAssertEqual(inst.subject!.reference!, "Practitioner/example")
		
		return inst
	}
}
