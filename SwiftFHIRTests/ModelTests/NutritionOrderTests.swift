//
//  NutritionOrderTests.swift
//  NutritionOrderTests
//
//  Generated from FHIR 0.4.0.4332 on 2015-03-10.
//  2015, SMART Platforms.
//

import XCTest
import SwiftFHIR


class NutritionOrderTests: FHIRModelTestCase
{
	func instantiateFrom(# filename: String) -> NutritionOrder {
		return instantiateFrom(json: readJSONFile(filename)!)
	}
	
	func instantiateFrom(# json: JSONDictionary) -> NutritionOrder {
		let instance = NutritionOrder(json: json)
		XCTAssertNotNil(instance, "Must have instantiated a test instance")
		return instance
	}
	
	func testNutritionOrder1() {
		let instance = testNutritionOrder1_impl()
		testNutritionOrder1_impl(json: instance.asJSON())
	}
	
	func testNutritionOrder1_impl(json: JSONDictionary? = nil) -> NutritionOrder {
		let inst = (nil != json) ? instantiateFrom(json: json!) : instantiateFrom(filename: "nutritionorder-example-cardiacdiet.canonical.json")
		
		XCTAssertEqual(inst.allergyIntolerance![0].display!, "Cashew Nuts")
		XCTAssertEqual(inst.allergyIntolerance![0].reference!, "AllergyIntolerance/example")
		XCTAssertEqual(inst.dateTime!.description, "2014-09-17")
		XCTAssertEqual(inst.encounter!.display!, "Inpatient")
		XCTAssertEqual(inst.encounter!.reference!, "Encounter/example")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].code!, "227493005")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].display!, "Cashew Nut")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].version!, "20140730")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].code!, "dairy-free")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].system!.absoluteString!, "http://hl7.org/fhir/diet")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].valueSet!.display!, "PatientDiet")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].valueSet!.reference!, "http://hl7.org/fhir/vs/encounter-diet")
		XCTAssertEqual(inst.id!, "cardiacdiet")
		XCTAssertEqual(inst.identifier![0].system!.absoluteString!, "http://goodhealthhospital.org/nutrition-orders")
		XCTAssertEqual(inst.identifier![0].value!, "123")
		XCTAssertEqual(inst.oralDiet!.instruction!, "Starting on 2/10 breakfast, maximum 400 ml fluids per meal")
		XCTAssertEqual(inst.oralDiet!.nutrients![0].amount!.code!, "g")
		XCTAssertEqual(inst.oralDiet!.nutrients![0].amount!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.oralDiet!.nutrients![0].amount!.units!, "grams")
		XCTAssertEqual(inst.oralDiet!.nutrients![0].amount!.value!, NSDecimalNumber(string: "2"))
		XCTAssertEqual(inst.oralDiet!.nutrients![0].modifier_fhir!.coding![0].code!, "39972003")
		XCTAssertEqual(inst.oralDiet!.nutrients![0].modifier_fhir!.coding![0].display!, "Sodium")
		XCTAssertEqual(inst.oralDiet!.nutrients![0].modifier_fhir!.coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.oralDiet!.nutrients![1].amount!.code!, "mL")
		XCTAssertEqual(inst.oralDiet!.nutrients![1].amount!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.oralDiet!.nutrients![1].amount!.units!, "milliliter")
		XCTAssertEqual(inst.oralDiet!.nutrients![1].amount!.value!, NSDecimalNumber(string: "1500"))
		XCTAssertEqual(inst.oralDiet!.nutrients![1].modifier_fhir!.coding![0].code!, "33463005")
		XCTAssertEqual(inst.oralDiet!.nutrients![1].modifier_fhir!.coding![0].display!, "Fluid")
		XCTAssertEqual(inst.oralDiet!.nutrients![1].modifier_fhir!.coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.oralDiet!.type![0].coding![0].code!, "386619000")
		XCTAssertEqual(inst.oralDiet!.type![0].coding![0].display!, "Low sodium diet")
		XCTAssertEqual(inst.oralDiet!.type![0].coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.oralDiet!.type![0].coding![1].code!, "1040")
		XCTAssertEqual(inst.oralDiet!.type![0].coding![1].display!, "Low Sodium Diet")
		XCTAssertEqual(inst.oralDiet!.type![0].coding![1].system!.absoluteString!, "http://goodhealthhospital.org/diet-type-codes")
		XCTAssertEqual(inst.oralDiet!.type![0].text!, "Low sodium diet")
		XCTAssertEqual(inst.oralDiet!.type![1].coding![0].code!, "226208002")
		XCTAssertEqual(inst.oralDiet!.type![1].coding![0].display!, "Fluid restricted diet")
		XCTAssertEqual(inst.oralDiet!.type![1].coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.oralDiet!.type![1].coding![1].code!, "1040")
		XCTAssertEqual(inst.oralDiet!.type![1].coding![1].display!, "Fluid restricted diet")
		XCTAssertEqual(inst.oralDiet!.type![1].coding![1].system!.absoluteString!, "http://goodhealthhospital.org/diet-type-codes")
		XCTAssertEqual(inst.oralDiet!.type![1].text!, "Fluid restricted diet")
		XCTAssertEqual(inst.orderer!.display!, "Dr Adam Careful")
		XCTAssertEqual(inst.orderer!.reference!, "Practitioner/example")
		XCTAssertEqual(inst.patient!.display!, "Peter Chalmers")
		XCTAssertEqual(inst.patient!.reference!, "Patient/example")
		XCTAssertEqual(inst.status!, "active")
		XCTAssertEqual(inst.text!.status!, "generated")
		
		return inst
	}
	
	func testNutritionOrder2() {
		let instance = testNutritionOrder2_impl()
		testNutritionOrder2_impl(json: instance.asJSON())
	}
	
	func testNutritionOrder2_impl(json: JSONDictionary? = nil) -> NutritionOrder {
		let inst = (nil != json) ? instantiateFrom(json: json!) : instantiateFrom(filename: "nutritionorder-example-cardiacdiet.canonical.json")
		
		XCTAssertEqual(inst.allergyIntolerance![0].display!, "Cashew Nuts")
		XCTAssertEqual(inst.allergyIntolerance![0].reference!, "AllergyIntolerance/example")
		XCTAssertEqual(inst.dateTime!.description, "2014-09-17")
		XCTAssertEqual(inst.encounter!.display!, "Inpatient")
		XCTAssertEqual(inst.encounter!.reference!, "Encounter/example")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].code!, "227493005")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].display!, "Cashew Nut")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].version!, "20140730")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].code!, "dairy-free")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].system!.absoluteString!, "http://hl7.org/fhir/diet")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].valueSet!.display!, "PatientDiet")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].valueSet!.reference!, "http://hl7.org/fhir/vs/encounter-diet")
		XCTAssertEqual(inst.id!, "cardiacdiet")
		XCTAssertEqual(inst.identifier![0].system!.absoluteString!, "http://goodhealthhospital.org/nutrition-orders")
		XCTAssertEqual(inst.identifier![0].value!, "123")
		XCTAssertEqual(inst.oralDiet!.instruction!, "Starting on 2/10 breakfast, maximum 400 ml fluids per meal")
		XCTAssertEqual(inst.oralDiet!.nutrients![0].amount!.code!, "g")
		XCTAssertEqual(inst.oralDiet!.nutrients![0].amount!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.oralDiet!.nutrients![0].amount!.units!, "grams")
		XCTAssertEqual(inst.oralDiet!.nutrients![0].amount!.value!, NSDecimalNumber(string: "2"))
		XCTAssertEqual(inst.oralDiet!.nutrients![0].modifier_fhir!.coding![0].code!, "39972003")
		XCTAssertEqual(inst.oralDiet!.nutrients![0].modifier_fhir!.coding![0].display!, "Sodium")
		XCTAssertEqual(inst.oralDiet!.nutrients![0].modifier_fhir!.coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.oralDiet!.nutrients![1].amount!.code!, "mL")
		XCTAssertEqual(inst.oralDiet!.nutrients![1].amount!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.oralDiet!.nutrients![1].amount!.units!, "milliliter")
		XCTAssertEqual(inst.oralDiet!.nutrients![1].amount!.value!, NSDecimalNumber(string: "1500"))
		XCTAssertEqual(inst.oralDiet!.nutrients![1].modifier_fhir!.coding![0].code!, "33463005")
		XCTAssertEqual(inst.oralDiet!.nutrients![1].modifier_fhir!.coding![0].display!, "Fluid")
		XCTAssertEqual(inst.oralDiet!.nutrients![1].modifier_fhir!.coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.oralDiet!.type![0].coding![0].code!, "386619000")
		XCTAssertEqual(inst.oralDiet!.type![0].coding![0].display!, "Low sodium diet")
		XCTAssertEqual(inst.oralDiet!.type![0].coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.oralDiet!.type![0].coding![1].code!, "1040")
		XCTAssertEqual(inst.oralDiet!.type![0].coding![1].display!, "Low Sodium Diet")
		XCTAssertEqual(inst.oralDiet!.type![0].coding![1].system!.absoluteString!, "http://goodhealthhospital.org/diet-type-codes")
		XCTAssertEqual(inst.oralDiet!.type![0].text!, "Low sodium diet")
		XCTAssertEqual(inst.oralDiet!.type![1].coding![0].code!, "226208002")
		XCTAssertEqual(inst.oralDiet!.type![1].coding![0].display!, "Fluid restricted diet")
		XCTAssertEqual(inst.oralDiet!.type![1].coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.oralDiet!.type![1].coding![1].code!, "1040")
		XCTAssertEqual(inst.oralDiet!.type![1].coding![1].display!, "Fluid restricted diet")
		XCTAssertEqual(inst.oralDiet!.type![1].coding![1].system!.absoluteString!, "http://goodhealthhospital.org/diet-type-codes")
		XCTAssertEqual(inst.oralDiet!.type![1].text!, "Fluid restricted diet")
		XCTAssertEqual(inst.orderer!.display!, "Dr Adam Careful")
		XCTAssertEqual(inst.orderer!.reference!, "Practitioner/example")
		XCTAssertEqual(inst.patient!.display!, "Peter Chalmers")
		XCTAssertEqual(inst.patient!.reference!, "Patient/example")
		XCTAssertEqual(inst.status!, "active")
		XCTAssertEqual(inst.text!.status!, "generated")
		
		return inst
	}
	
	func testNutritionOrder3() {
		let instance = testNutritionOrder3_impl()
		testNutritionOrder3_impl(json: instance.asJSON())
	}
	
	func testNutritionOrder3_impl(json: JSONDictionary? = nil) -> NutritionOrder {
		let inst = (nil != json) ? instantiateFrom(json: json!) : instantiateFrom(filename: "nutritionorder-example-cardiacdiet.json")
		
		XCTAssertEqual(inst.allergyIntolerance![0].display!, "Cashew Nuts")
		XCTAssertEqual(inst.allergyIntolerance![0].reference!, "AllergyIntolerance/example")
		XCTAssertEqual(inst.dateTime!.description, "2014-09-17")
		XCTAssertEqual(inst.encounter!.display!, "Inpatient")
		XCTAssertEqual(inst.encounter!.reference!, "Encounter/example")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].code!, "227493005")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].display!, "Cashew Nut")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].version!, "20140730")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].code!, "dairy-free")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].system!.absoluteString!, "http://hl7.org/fhir/diet")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].valueSet!.display!, "PatientDiet")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].valueSet!.reference!, "http://hl7.org/fhir/vs/encounter-diet")
		XCTAssertEqual(inst.id!, "cardiacdiet")
		XCTAssertEqual(inst.identifier![0].system!.absoluteString!, "http://goodhealthhospital.org/nutrition-orders")
		XCTAssertEqual(inst.identifier![0].value!, "123")
		XCTAssertEqual(inst.oralDiet!.instruction!, "Starting on 2/10 breakfast, maximum 400 ml fluids per meal")
		XCTAssertEqual(inst.oralDiet!.nutrients![0].amount!.code!, "g")
		XCTAssertEqual(inst.oralDiet!.nutrients![0].amount!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.oralDiet!.nutrients![0].amount!.units!, "grams")
		XCTAssertEqual(inst.oralDiet!.nutrients![0].amount!.value!, NSDecimalNumber(string: "2"))
		XCTAssertEqual(inst.oralDiet!.nutrients![0].modifier_fhir!.coding![0].code!, "39972003")
		XCTAssertEqual(inst.oralDiet!.nutrients![0].modifier_fhir!.coding![0].display!, "Sodium")
		XCTAssertEqual(inst.oralDiet!.nutrients![0].modifier_fhir!.coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.oralDiet!.nutrients![1].amount!.code!, "mL")
		XCTAssertEqual(inst.oralDiet!.nutrients![1].amount!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.oralDiet!.nutrients![1].amount!.units!, "milliliter")
		XCTAssertEqual(inst.oralDiet!.nutrients![1].amount!.value!, NSDecimalNumber(string: "1500"))
		XCTAssertEqual(inst.oralDiet!.nutrients![1].modifier_fhir!.coding![0].code!, "33463005")
		XCTAssertEqual(inst.oralDiet!.nutrients![1].modifier_fhir!.coding![0].display!, "Fluid")
		XCTAssertEqual(inst.oralDiet!.nutrients![1].modifier_fhir!.coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.oralDiet!.type![0].coding![0].code!, "386619000")
		XCTAssertEqual(inst.oralDiet!.type![0].coding![0].display!, "Low sodium diet")
		XCTAssertEqual(inst.oralDiet!.type![0].coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.oralDiet!.type![0].coding![1].code!, "1040")
		XCTAssertEqual(inst.oralDiet!.type![0].coding![1].display!, "Low Sodium Diet")
		XCTAssertEqual(inst.oralDiet!.type![0].coding![1].system!.absoluteString!, "http://goodhealthhospital.org/diet-type-codes")
		XCTAssertEqual(inst.oralDiet!.type![0].text!, "Low sodium diet")
		XCTAssertEqual(inst.oralDiet!.type![1].coding![0].code!, "226208002")
		XCTAssertEqual(inst.oralDiet!.type![1].coding![0].display!, "Fluid restricted diet")
		XCTAssertEqual(inst.oralDiet!.type![1].coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.oralDiet!.type![1].coding![1].code!, "1040")
		XCTAssertEqual(inst.oralDiet!.type![1].coding![1].display!, "Fluid restricted diet")
		XCTAssertEqual(inst.oralDiet!.type![1].coding![1].system!.absoluteString!, "http://goodhealthhospital.org/diet-type-codes")
		XCTAssertEqual(inst.oralDiet!.type![1].text!, "Fluid restricted diet")
		XCTAssertEqual(inst.orderer!.display!, "Dr Adam Careful")
		XCTAssertEqual(inst.orderer!.reference!, "Practitioner/example")
		XCTAssertEqual(inst.patient!.display!, "Peter Chalmers")
		XCTAssertEqual(inst.patient!.reference!, "Patient/example")
		XCTAssertEqual(inst.status!, "active")
		XCTAssertEqual(inst.text!.status!, "generated")
		
		return inst
	}
	
	func testNutritionOrder4() {
		let instance = testNutritionOrder4_impl()
		testNutritionOrder4_impl(json: instance.asJSON())
	}
	
	func testNutritionOrder4_impl(json: JSONDictionary? = nil) -> NutritionOrder {
		let inst = (nil != json) ? instantiateFrom(json: json!) : instantiateFrom(filename: "nutritionorder-example-diabeticdiet.canonical.json")
		
		XCTAssertEqual(inst.allergyIntolerance![0].display!, "Cashew Nuts")
		XCTAssertEqual(inst.allergyIntolerance![0].reference!, "AllergyIntolerance/example")
		XCTAssertEqual(inst.dateTime!.description, "2014-09-17")
		XCTAssertEqual(inst.encounter!.display!, "Inpatient")
		XCTAssertEqual(inst.encounter!.reference!, "Encounter/example")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].code!, "227493005")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].display!, "Cashew Nut")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].version!, "20140730")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].code!, "dairy-free")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].system!.absoluteString!, "http://hl7.org/fhir/diet")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].valueSet!.display!, "PatientDiet")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].valueSet!.reference!, "http://hl7.org/fhir/vs/encounter-diet")
		XCTAssertEqual(inst.id!, "diabeticdiet")
		XCTAssertEqual(inst.identifier![0].system!.absoluteString!, "http://goodhealthhospital.org/nutrition-orders")
		XCTAssertEqual(inst.identifier![0].value!, "123")
		XCTAssertEqual(inst.oralDiet!.nutrients![0].amount!.code!, "g")
		XCTAssertEqual(inst.oralDiet!.nutrients![0].amount!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.oralDiet!.nutrients![0].amount!.units!, "grams")
		XCTAssertEqual(inst.oralDiet!.nutrients![0].amount!.value!, NSDecimalNumber(string: "75"))
		XCTAssertEqual(inst.oralDiet!.nutrients![0].modifier_fhir!.coding![0].code!, "2331003")
		XCTAssertEqual(inst.oralDiet!.nutrients![0].modifier_fhir!.coding![0].display!, "Carbohydrate")
		XCTAssertEqual(inst.oralDiet!.nutrients![0].modifier_fhir!.coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.oralDiet!.scheduled!.event![0].start!.description, "2015-02-10")
		XCTAssertEqual(inst.oralDiet!.scheduled!.repeat!.duration!, NSDecimalNumber(string: "1"))
		XCTAssertEqual(inst.oralDiet!.scheduled!.repeat!.frequency!, 3)
		XCTAssertEqual(inst.oralDiet!.scheduled!.repeat!.units!, "d")
		XCTAssertEqual(inst.oralDiet!.type![0].coding![0].code!, "160670007")
		XCTAssertEqual(inst.oralDiet!.type![0].coding![0].display!, "Diabetic diet")
		XCTAssertEqual(inst.oralDiet!.type![0].coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.oralDiet!.type![0].coding![1].code!, "1030")
		XCTAssertEqual(inst.oralDiet!.type![0].coding![1].display!, "DD - Diabetic diet")
		XCTAssertEqual(inst.oralDiet!.type![0].coding![1].system!.absoluteString!, "http://goodhealthhospital.org/diet-type-codes")
		XCTAssertEqual(inst.oralDiet!.type![0].text!, "DD - Diabetic diet")
		XCTAssertEqual(inst.orderer!.display!, "Dr Adam Careful")
		XCTAssertEqual(inst.orderer!.reference!, "Practitioner/example")
		XCTAssertEqual(inst.patient!.display!, "Peter Chalmers")
		XCTAssertEqual(inst.patient!.reference!, "Patient/example")
		XCTAssertEqual(inst.status!, "active")
		XCTAssertEqual(inst.text!.status!, "generated")
		
		return inst
	}
	
	func testNutritionOrder5() {
		let instance = testNutritionOrder5_impl()
		testNutritionOrder5_impl(json: instance.asJSON())
	}
	
	func testNutritionOrder5_impl(json: JSONDictionary? = nil) -> NutritionOrder {
		let inst = (nil != json) ? instantiateFrom(json: json!) : instantiateFrom(filename: "nutritionorder-example-diabeticdiet.json")
		
		XCTAssertEqual(inst.allergyIntolerance![0].display!, "Cashew Nuts")
		XCTAssertEqual(inst.allergyIntolerance![0].reference!, "AllergyIntolerance/example")
		XCTAssertEqual(inst.dateTime!.description, "2014-09-17")
		XCTAssertEqual(inst.encounter!.display!, "Inpatient")
		XCTAssertEqual(inst.encounter!.reference!, "Encounter/example")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].code!, "227493005")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].display!, "Cashew Nut")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].version!, "20140730")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].code!, "dairy-free")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].system!.absoluteString!, "http://hl7.org/fhir/diet")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].valueSet!.display!, "PatientDiet")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].valueSet!.reference!, "http://hl7.org/fhir/vs/encounter-diet")
		XCTAssertEqual(inst.id!, "diabeticdiet")
		XCTAssertEqual(inst.identifier![0].system!.absoluteString!, "http://goodhealthhospital.org/nutrition-orders")
		XCTAssertEqual(inst.identifier![0].value!, "123")
		XCTAssertEqual(inst.oralDiet!.nutrients![0].amount!.code!, "g")
		XCTAssertEqual(inst.oralDiet!.nutrients![0].amount!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.oralDiet!.nutrients![0].amount!.units!, "grams")
		XCTAssertEqual(inst.oralDiet!.nutrients![0].amount!.value!, NSDecimalNumber(string: "75"))
		XCTAssertEqual(inst.oralDiet!.nutrients![0].modifier_fhir!.coding![0].code!, "2331003")
		XCTAssertEqual(inst.oralDiet!.nutrients![0].modifier_fhir!.coding![0].display!, "Carbohydrate")
		XCTAssertEqual(inst.oralDiet!.nutrients![0].modifier_fhir!.coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.oralDiet!.scheduled!.event![0].start!.description, "2015-02-10")
		XCTAssertEqual(inst.oralDiet!.scheduled!.repeat!.duration!, NSDecimalNumber(string: "1"))
		XCTAssertEqual(inst.oralDiet!.scheduled!.repeat!.frequency!, 3)
		XCTAssertEqual(inst.oralDiet!.scheduled!.repeat!.units!, "d")
		XCTAssertEqual(inst.oralDiet!.type![0].coding![0].code!, "160670007")
		XCTAssertEqual(inst.oralDiet!.type![0].coding![0].display!, "Diabetic diet")
		XCTAssertEqual(inst.oralDiet!.type![0].coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.oralDiet!.type![0].coding![1].code!, "1030")
		XCTAssertEqual(inst.oralDiet!.type![0].coding![1].display!, "DD - Diabetic diet")
		XCTAssertEqual(inst.oralDiet!.type![0].coding![1].system!.absoluteString!, "http://goodhealthhospital.org/diet-type-codes")
		XCTAssertEqual(inst.oralDiet!.type![0].text!, "DD - Diabetic diet")
		XCTAssertEqual(inst.orderer!.display!, "Dr Adam Careful")
		XCTAssertEqual(inst.orderer!.reference!, "Practitioner/example")
		XCTAssertEqual(inst.patient!.display!, "Peter Chalmers")
		XCTAssertEqual(inst.patient!.reference!, "Patient/example")
		XCTAssertEqual(inst.status!, "active")
		XCTAssertEqual(inst.text!.status!, "generated")
		
		return inst
	}
	
	func testNutritionOrder6() {
		let instance = testNutritionOrder6_impl()
		testNutritionOrder6_impl(json: instance.asJSON())
	}
	
	func testNutritionOrder6_impl(json: JSONDictionary? = nil) -> NutritionOrder {
		let inst = (nil != json) ? instantiateFrom(json: json!) : instantiateFrom(filename: "nutritionorder-example-diabeticsupplement.canonical.json")
		
		XCTAssertEqual(inst.allergyIntolerance![0].display!, "Cashew Nuts")
		XCTAssertEqual(inst.allergyIntolerance![0].reference!, "AllergyIntolerance/example")
		XCTAssertEqual(inst.dateTime!.description, "2014-09-17")
		XCTAssertEqual(inst.encounter!.display!, "Inpatient")
		XCTAssertEqual(inst.encounter!.reference!, "Encounter/example")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].code!, "227493005")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].display!, "Cashew Nut")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].version!, "20140730")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].code!, "kosher")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].system!.absoluteString!, "http://hl7.org/fhir/diet")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].valueSet!.display!, "PatientDiet")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].valueSet!.reference!, "http://hl7.org/fhir/vs/encounter-diet")
		XCTAssertEqual(inst.id!, "diabeticsupplement")
		XCTAssertEqual(inst.identifier![0].system!.absoluteString!, "http://goodhealthhospital.org/nutrition-orders")
		XCTAssertEqual(inst.identifier![0].value!, "123")
		XCTAssertEqual(inst.orderer!.display!, "Dr Adam Careful")
		XCTAssertEqual(inst.orderer!.reference!, "Practitioner/example")
		XCTAssertEqual(inst.patient!.display!, "Peter Chalmers")
		XCTAssertEqual(inst.patient!.reference!, "Patient/example")
		XCTAssertEqual(inst.status!, "active")
		XCTAssertEqual(inst.supplement![0].productName!, "Glucerna")
		XCTAssertEqual(inst.supplement![0].quantity!.units!, "8 oz bottle")
		XCTAssertEqual(inst.supplement![0].quantity!.value!, NSDecimalNumber(string: "1"))
		XCTAssertEqual(inst.supplement![0].scheduled!.event![0].start!.description, "2015-02-10")
		XCTAssertEqual(inst.supplement![0].scheduled!.repeat!.duration!, NSDecimalNumber(string: "1"))
		XCTAssertEqual(inst.supplement![0].scheduled!.repeat!.units!, "h")
		XCTAssertEqual(inst.supplement![0].scheduled!.repeat!.when!, "HS")
		XCTAssertEqual(inst.supplement![0].type!.coding![0].code!, "443051000124104")
		XCTAssertEqual(inst.supplement![0].type!.coding![0].display!, "Adult diabetes specialty formula")
		XCTAssertEqual(inst.supplement![0].type!.coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.supplement![0].type!.coding![1].code!, "1010")
		XCTAssertEqual(inst.supplement![0].type!.coding![1].display!, "Adult diabetic formula")
		XCTAssertEqual(inst.supplement![0].type!.coding![1].system!.absoluteString!, "http://goodhealthhospital.org/supplement-type-codes")
		XCTAssertEqual(inst.supplement![0].type!.text!, "Adult diabetic formula")
		XCTAssertEqual(inst.text!.status!, "generated")
		
		return inst
	}
	
	func testNutritionOrder7() {
		let instance = testNutritionOrder7_impl()
		testNutritionOrder7_impl(json: instance.asJSON())
	}
	
	func testNutritionOrder7_impl(json: JSONDictionary? = nil) -> NutritionOrder {
		let inst = (nil != json) ? instantiateFrom(json: json!) : instantiateFrom(filename: "nutritionorder-example-diabeticsupplement.json")
		
		XCTAssertEqual(inst.allergyIntolerance![0].display!, "Cashew Nuts")
		XCTAssertEqual(inst.allergyIntolerance![0].reference!, "AllergyIntolerance/example")
		XCTAssertEqual(inst.dateTime!.description, "2014-09-17")
		XCTAssertEqual(inst.encounter!.display!, "Inpatient")
		XCTAssertEqual(inst.encounter!.reference!, "Encounter/example")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].code!, "227493005")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].display!, "Cashew Nut")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].version!, "20140730")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].code!, "kosher")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].system!.absoluteString!, "http://hl7.org/fhir/diet")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].valueSet!.display!, "PatientDiet")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].valueSet!.reference!, "http://hl7.org/fhir/vs/encounter-diet")
		XCTAssertEqual(inst.id!, "diabeticsupplement")
		XCTAssertEqual(inst.identifier![0].system!.absoluteString!, "http://goodhealthhospital.org/nutrition-orders")
		XCTAssertEqual(inst.identifier![0].value!, "123")
		XCTAssertEqual(inst.orderer!.display!, "Dr Adam Careful")
		XCTAssertEqual(inst.orderer!.reference!, "Practitioner/example")
		XCTAssertEqual(inst.patient!.display!, "Peter Chalmers")
		XCTAssertEqual(inst.patient!.reference!, "Patient/example")
		XCTAssertEqual(inst.status!, "active")
		XCTAssertEqual(inst.supplement![0].productName!, "Glucerna")
		XCTAssertEqual(inst.supplement![0].quantity!.units!, "8 oz bottle")
		XCTAssertEqual(inst.supplement![0].quantity!.value!, NSDecimalNumber(string: "1"))
		XCTAssertEqual(inst.supplement![0].scheduled!.event![0].start!.description, "2015-02-10")
		XCTAssertEqual(inst.supplement![0].scheduled!.repeat!.duration!, NSDecimalNumber(string: "1"))
		XCTAssertEqual(inst.supplement![0].scheduled!.repeat!.units!, "h")
		XCTAssertEqual(inst.supplement![0].scheduled!.repeat!.when!, "HS")
		XCTAssertEqual(inst.supplement![0].type!.coding![0].code!, "443051000124104")
		XCTAssertEqual(inst.supplement![0].type!.coding![0].display!, "Adult diabetes specialty formula")
		XCTAssertEqual(inst.supplement![0].type!.coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.supplement![0].type!.coding![1].code!, "1010")
		XCTAssertEqual(inst.supplement![0].type!.coding![1].display!, "Adult diabetic formula")
		XCTAssertEqual(inst.supplement![0].type!.coding![1].system!.absoluteString!, "http://goodhealthhospital.org/supplement-type-codes")
		XCTAssertEqual(inst.supplement![0].type!.text!, "Adult diabetic formula")
		XCTAssertEqual(inst.text!.status!, "generated")
		
		return inst
	}
	
	func testNutritionOrder8() {
		let instance = testNutritionOrder8_impl()
		testNutritionOrder8_impl(json: instance.asJSON())
	}
	
	func testNutritionOrder8_impl(json: JSONDictionary? = nil) -> NutritionOrder {
		let inst = (nil != json) ? instantiateFrom(json: json!) : instantiateFrom(filename: "nutritionorder-example-energysupplement.canonical.json")
		
		XCTAssertEqual(inst.allergyIntolerance![0].display!, "Cashew Nuts")
		XCTAssertEqual(inst.allergyIntolerance![0].reference!, "AllergyIntolerance/example")
		XCTAssertEqual(inst.dateTime!.description, "2014-09-17")
		XCTAssertEqual(inst.encounter!.display!, "Inpatient")
		XCTAssertEqual(inst.encounter!.reference!, "Encounter/example")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].code!, "227493005")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].display!, "Cashew Nut")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].version!, "20140730")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].code!, "kosher")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].system!.absoluteString!, "http://hl7.org/fhir/diet")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].valueSet!.display!, "PatientDiet")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].valueSet!.reference!, "http://hl7.org/fhir/vs/encounter-diet")
		XCTAssertEqual(inst.id!, "energysupplement")
		XCTAssertEqual(inst.identifier![0].system!.absoluteString!, "http://goodhealthhospital.org/nutrition-orders")
		XCTAssertEqual(inst.identifier![0].value!, "123")
		XCTAssertEqual(inst.orderer!.display!, "Dr Adam Careful")
		XCTAssertEqual(inst.orderer!.reference!, "Practitioner/example")
		XCTAssertEqual(inst.patient!.display!, "Peter Chalmers")
		XCTAssertEqual(inst.patient!.reference!, "Patient/example")
		XCTAssertEqual(inst.status!, "active")
		XCTAssertEqual(inst.supplement![0].productName!, "Ensure")
		XCTAssertEqual(inst.supplement![0].quantity!.units!, "8 oz can")
		XCTAssertEqual(inst.supplement![0].quantity!.value!, NSDecimalNumber(string: "1"))
		XCTAssertEqual(inst.supplement![0].scheduled!.event![0].start!.description, "2015-02-10")
		XCTAssertEqual(inst.supplement![0].scheduled!.repeat!.duration!, NSDecimalNumber(string: "1"))
		XCTAssertEqual(inst.supplement![0].scheduled!.repeat!.frequency!, 3)
		XCTAssertEqual(inst.supplement![0].scheduled!.repeat!.units!, "d")
		XCTAssertEqual(inst.supplement![0].type!.coding![0].code!, "442971000124100")
		XCTAssertEqual(inst.supplement![0].type!.coding![0].display!, "Adult high energy formula")
		XCTAssertEqual(inst.supplement![0].type!.coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.supplement![0].type!.coding![1].code!, "1010")
		XCTAssertEqual(inst.supplement![0].type!.coding![1].display!, "Adult high energy drink")
		XCTAssertEqual(inst.supplement![0].type!.coding![1].system!.absoluteString!, "http://goodhealthhospital.org/supplement-type-codes")
		XCTAssertEqual(inst.supplement![0].type!.text!, "Adult high energy drink")
		XCTAssertEqual(inst.text!.status!, "generated")
		
		return inst
	}
	
	func testNutritionOrder9() {
		let instance = testNutritionOrder9_impl()
		testNutritionOrder9_impl(json: instance.asJSON())
	}
	
	func testNutritionOrder9_impl(json: JSONDictionary? = nil) -> NutritionOrder {
		let inst = (nil != json) ? instantiateFrom(json: json!) : instantiateFrom(filename: "nutritionorder-example-energysupplement.json")
		
		XCTAssertEqual(inst.allergyIntolerance![0].display!, "Cashew Nuts")
		XCTAssertEqual(inst.allergyIntolerance![0].reference!, "AllergyIntolerance/example")
		XCTAssertEqual(inst.dateTime!.description, "2014-09-17")
		XCTAssertEqual(inst.encounter!.display!, "Inpatient")
		XCTAssertEqual(inst.encounter!.reference!, "Encounter/example")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].code!, "227493005")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].display!, "Cashew Nut")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].version!, "20140730")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].code!, "kosher")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].system!.absoluteString!, "http://hl7.org/fhir/diet")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].valueSet!.display!, "PatientDiet")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].valueSet!.reference!, "http://hl7.org/fhir/vs/encounter-diet")
		XCTAssertEqual(inst.id!, "energysupplement")
		XCTAssertEqual(inst.identifier![0].system!.absoluteString!, "http://goodhealthhospital.org/nutrition-orders")
		XCTAssertEqual(inst.identifier![0].value!, "123")
		XCTAssertEqual(inst.orderer!.display!, "Dr Adam Careful")
		XCTAssertEqual(inst.orderer!.reference!, "Practitioner/example")
		XCTAssertEqual(inst.patient!.display!, "Peter Chalmers")
		XCTAssertEqual(inst.patient!.reference!, "Patient/example")
		XCTAssertEqual(inst.status!, "active")
		XCTAssertEqual(inst.supplement![0].productName!, "Ensure")
		XCTAssertEqual(inst.supplement![0].quantity!.units!, "8 oz can")
		XCTAssertEqual(inst.supplement![0].quantity!.value!, NSDecimalNumber(string: "1"))
		XCTAssertEqual(inst.supplement![0].scheduled!.event![0].start!.description, "2015-02-10")
		XCTAssertEqual(inst.supplement![0].scheduled!.repeat!.duration!, NSDecimalNumber(string: "1"))
		XCTAssertEqual(inst.supplement![0].scheduled!.repeat!.frequency!, 3)
		XCTAssertEqual(inst.supplement![0].scheduled!.repeat!.units!, "d")
		XCTAssertEqual(inst.supplement![0].type!.coding![0].code!, "442971000124100")
		XCTAssertEqual(inst.supplement![0].type!.coding![0].display!, "Adult high energy formula")
		XCTAssertEqual(inst.supplement![0].type!.coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.supplement![0].type!.coding![1].code!, "1010")
		XCTAssertEqual(inst.supplement![0].type!.coding![1].display!, "Adult high energy drink")
		XCTAssertEqual(inst.supplement![0].type!.coding![1].system!.absoluteString!, "http://goodhealthhospital.org/supplement-type-codes")
		XCTAssertEqual(inst.supplement![0].type!.text!, "Adult high energy drink")
		XCTAssertEqual(inst.text!.status!, "generated")
		
		return inst
	}
	
	func testNutritionOrder10() {
		let instance = testNutritionOrder10_impl()
		testNutritionOrder10_impl(json: instance.asJSON())
	}
	
	func testNutritionOrder10_impl(json: JSONDictionary? = nil) -> NutritionOrder {
		let inst = (nil != json) ? instantiateFrom(json: json!) : instantiateFrom(filename: "nutritionorder-example-enteralbolus.canonical.json")
		
		XCTAssertEqual(inst.allergyIntolerance![0].display!, "Cashew Nuts")
		XCTAssertEqual(inst.allergyIntolerance![0].reference!, "AllergyIntolerance/example")
		XCTAssertEqual(inst.dateTime!.description, "2014-09-17")
		XCTAssertEqual(inst.encounter!.display!, "Inpatient")
		XCTAssertEqual(inst.encounter!.reference!, "Encounter/example")
		XCTAssertEqual(inst.enteralFormula!.additiveProductName!, "Acme Additive")
		XCTAssertEqual(inst.enteralFormula!.additiveType!.coding![0].code!, "427298002")
		XCTAssertEqual(inst.enteralFormula!.additiveType!.coding![0].display!, "Enteral dietary supplement")
		XCTAssertEqual(inst.enteralFormula!.additiveType!.coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.enteralFormula!.additiveType!.coding![0].valueSet!.display!, "EnteralFormulaAdditiveType")
		XCTAssertEqual(inst.enteralFormula!.additiveType!.coding![0].valueSet!.reference!, "http://hl7.org/fhir/vs/entformula-additive")
		XCTAssertEqual(inst.enteralFormula!.baseFormulaProductName!, "Acme High Protein Formula")
		XCTAssertEqual(inst.enteralFormula!.baseFormulaType!.coding![0].code!, "659311000124118")
		XCTAssertEqual(inst.enteralFormula!.baseFormulaType!.coding![0].display!, "Adult high protein formula")
		XCTAssertEqual(inst.enteralFormula!.baseFormulaType!.coding![0].system!.absoluteString!, "http://usextension/snomed.info/sct")
		XCTAssertEqual(inst.enteralFormula!.caloricDensity!.code!, "cal/mL")
		XCTAssertEqual(inst.enteralFormula!.caloricDensity!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.enteralFormula!.caloricDensity!.units!, "calories per milliliter")
		XCTAssertEqual(inst.enteralFormula!.caloricDensity!.value!, NSDecimalNumber(string: "1.5"))
		XCTAssertEqual(inst.enteralFormula!.maxVolumeToDeliver!.code!, "mL")
		XCTAssertEqual(inst.enteralFormula!.maxVolumeToDeliver!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.enteralFormula!.maxVolumeToDeliver!.units!, "milliliter")
		XCTAssertEqual(inst.enteralFormula!.maxVolumeToDeliver!.value!, NSDecimalNumber(string: "1440"))
		XCTAssertEqual(inst.enteralFormula!.quantity!.code!, "mL")
		XCTAssertEqual(inst.enteralFormula!.quantity!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.enteralFormula!.quantity!.units!, "milliliters")
		XCTAssertEqual(inst.enteralFormula!.quantity!.value!, NSDecimalNumber(string: "240"))
		XCTAssertEqual(inst.enteralFormula!.rate!.denominator!.code!, "h")
		XCTAssertEqual(inst.enteralFormula!.rate!.denominator!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.enteralFormula!.rate!.denominator!.units!, "hr")
		XCTAssertEqual(inst.enteralFormula!.rate!.denominator!.value!, NSDecimalNumber(string: "4"))
		XCTAssertEqual(inst.enteralFormula!.rate!.numerator!.code!, "mL")
		XCTAssertEqual(inst.enteralFormula!.rate!.numerator!.system!.absoluteString!, "http://unitsofmeasure.org")
		XCTAssertEqual(inst.enteralFormula!.rate!.numerator!.units!, "milliliters")
		XCTAssertEqual(inst.enteralFormula!.rate!.numerator!.value!, NSDecimalNumber(string: "240"))
		XCTAssertEqual(inst.enteralFormula!.routeofAdministration!.coding![0].code!, "GT")
		XCTAssertEqual(inst.enteralFormula!.routeofAdministration!.coding![0].display!, "Instillation, gastrostomy tube")
		XCTAssertEqual(inst.enteralFormula!.routeofAdministration!.coding![0].system!.absoluteString!, "http://hl7.org/fhir/v3/RouteOfAdministration")
		XCTAssertEqual(inst.enteralFormula!.routeofAdministration!.coding![0].valueSet!.display!, "EnteralRouteOfAdministration")
		XCTAssertEqual(inst.enteralFormula!.routeofAdministration!.coding![0].valueSet!.reference!, "http://hl7.org/fhir/vs/enteral-route")
		XCTAssertEqual(inst.enteralFormula!.scheduled!.event![0].start!.description, "2014-09-17")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].code!, "227493005")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].display!, "Cashew Nut")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].system!.absoluteString!, "http://snomed.info/sct")
		XCTAssertEqual(inst.excludeFoodModifier![0].coding![0].version!, "20140730")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].code!, "dairy-free")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].system!.absoluteString!, "http://hl7.org/fhir/diet")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].valueSet!.display!, "PatientDiet")
		XCTAssertEqual(inst.foodPreferenceModifier![0].coding![0].valueSet!.reference!, "http://hl7.org/fhir/vs/encounter-diet")
		XCTAssertEqual(inst.id!, "enteralbolus")
		XCTAssertEqual(inst.identifier![0].system!.absoluteString!, "http://www.acme.org/nutritionorders")
		XCTAssertEqual(inst.identifier![0].value!, "123")
		XCTAssertEqual(inst.orderer!.display!, "Dr Adam Careful")
		XCTAssertEqual(inst.orderer!.reference!, "Practitioner/example")
		XCTAssertEqual(inst.patient!.display!, "Peter Chalmers")
		XCTAssertEqual(inst.patient!.reference!, "Patient/example")
		XCTAssertEqual(inst.status!, "active")
		XCTAssertEqual(inst.text!.div!, "<div> Description = Nutrition Order Infant Enteral Feeding Canonical Example</div>")
		XCTAssertEqual(inst.text!.status!, "generated")
		
		return inst
	}
}
