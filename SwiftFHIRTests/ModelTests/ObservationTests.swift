//
//  ObservationTests.swift
//  ObservationTests
//
//  Generated from FHIR 0.4.0.3898 on 2014-12-20.
//  2014, SMART Platforms.
//

import Cocoa
import XCTest
import SwiftFHIR


class ObservationTests: FHIRModelTestCase
{
	func instantiateFrom(filename: String) -> Observation? {
		let json = readJSONFile(filename)
		let instance = Observation(json: json)
		XCTAssertNotNil(instance, "Must have instantiated a test instance")
		return instance
	}
	
	func testObservation1() {
		let inst = instantiateFrom("obs-uslab-example1.canonical.json")
		XCTAssertNotNil(inst, "Must have instantiated a Observation instance")
	
		XCTAssertEqual(inst!.appliesDateTime!, NSDate.dateFromISOString("2014-12-03")!)
		XCTAssertEqual(inst!.identifier!.label!, "lab test result ID")
		XCTAssertEqual(inst!.identifier!.system!, NSURL(string: "http://lis.acmelabs.org/identifiers/labtestresult")!)
		XCTAssertEqual(inst!.identifier!.use!, "official")
		XCTAssertEqual(inst!.identifier!.value!, "1234")
		XCTAssertEqual(inst!.interpretation!.coding![0].code!, "H")
		XCTAssertEqual(inst!.interpretation!.coding![0].system!, NSURL(string: "http://hl7.org/fhir/v2/0078")!)
		XCTAssertEqual(inst!.issued!, NSDate.dateFromISOString("2014-12-04T15:42:15-08:00")!)
		XCTAssertEqual(inst!.name!.coding![0].code!, "10368-9")
		XCTAssertEqual(inst!.name!.coding![0].display!, "Lead [Mass/​volume] in Capillary blood")
		XCTAssertEqual(inst!.name!.coding![0].system!, NSURL(string: "http://loinc.org")!)
		XCTAssertEqual(inst!.name!.coding![1].code!, "CAPLD")
		XCTAssertEqual(inst!.name!.coding![1].display!, "Blood Lead, Capillary")
		XCTAssertEqual(inst!.name!.coding![1].system!, NSURL(string: "urn:oid:2.16.840.1.113883.3.72.5.24")!)
		XCTAssertEqual(inst!.name!.text!, "Capillary Blood Lead Screen")
		XCTAssertEqual(inst!.performer![0].display!, "Dr Leonard T Bloodraw Jr")
		XCTAssertEqual(inst!.performer![0].reference!, "uslab-example1")
		XCTAssertEqual(inst!.referenceRange![0].high!.code!, "ug/dL")
		XCTAssertEqual(inst!.referenceRange![0].high!.system!, NSURL(string: "http://unitsofmeasure.org")!)
		XCTAssertEqual(inst!.referenceRange![0].high!.units!, "microgram per deciliter")
		XCTAssertEqual(inst!.referenceRange![0].high!.value!, NSDecimalNumber(string: "5.0"))
		XCTAssertEqual(inst!.specimen!.display!, "Blood sample")
		XCTAssertEqual(inst!.specimen!.reference!, "uslab-example1")
		XCTAssertEqual(inst!.status!, "final")
		XCTAssertEqual(inst!.subject!.display!, "Todd Lerr")
		XCTAssertEqual(inst!.subject!.reference!, "uslab-example1")
		XCTAssertEqual(inst!.valueQuantity!.code!, "ug/dL")
		XCTAssertEqual(inst!.valueQuantity!.system!, NSURL(string: "http://unitsofmeasure.org")!)
		XCTAssertEqual(inst!.valueQuantity!.units!, "microgram per deciliter")
		XCTAssertEqual(inst!.valueQuantity!.value!, NSDecimalNumber(string: "65"))
	}
	
	func testObservation2() {
		let inst = instantiateFrom("obs-uslab-example1.canonical.json")
		XCTAssertNotNil(inst, "Must have instantiated a Observation instance")
	
		XCTAssertEqual(inst!.appliesDateTime!, NSDate.dateFromISOString("2014-12-03")!)
		XCTAssertEqual(inst!.identifier!.label!, "lab test result ID")
		XCTAssertEqual(inst!.identifier!.system!, NSURL(string: "http://lis.acmelabs.org/identifiers/labtestresult")!)
		XCTAssertEqual(inst!.identifier!.use!, "official")
		XCTAssertEqual(inst!.identifier!.value!, "1234")
		XCTAssertEqual(inst!.interpretation!.coding![0].code!, "H")
		XCTAssertEqual(inst!.interpretation!.coding![0].system!, NSURL(string: "http://hl7.org/fhir/v2/0078")!)
		XCTAssertEqual(inst!.issued!, NSDate.dateFromISOString("2014-12-04T15:42:15-08:00")!)
		XCTAssertEqual(inst!.name!.coding![0].code!, "10368-9")
		XCTAssertEqual(inst!.name!.coding![0].display!, "Lead [Mass/​volume] in Capillary blood")
		XCTAssertEqual(inst!.name!.coding![0].system!, NSURL(string: "http://loinc.org")!)
		XCTAssertEqual(inst!.name!.coding![1].code!, "CAPLD")
		XCTAssertEqual(inst!.name!.coding![1].display!, "Blood Lead, Capillary")
		XCTAssertEqual(inst!.name!.coding![1].system!, NSURL(string: "urn:oid:2.16.840.1.113883.3.72.5.24")!)
		XCTAssertEqual(inst!.name!.text!, "Capillary Blood Lead Screen")
		XCTAssertEqual(inst!.performer![0].display!, "Dr Leonard T Bloodraw Jr")
		XCTAssertEqual(inst!.performer![0].reference!, "uslab-example1")
		XCTAssertEqual(inst!.referenceRange![0].high!.code!, "ug/dL")
		XCTAssertEqual(inst!.referenceRange![0].high!.system!, NSURL(string: "http://unitsofmeasure.org")!)
		XCTAssertEqual(inst!.referenceRange![0].high!.units!, "microgram per deciliter")
		XCTAssertEqual(inst!.referenceRange![0].high!.value!, NSDecimalNumber(string: "5.0"))
		XCTAssertEqual(inst!.specimen!.display!, "Blood sample")
		XCTAssertEqual(inst!.specimen!.reference!, "uslab-example1")
		XCTAssertEqual(inst!.status!, "final")
		XCTAssertEqual(inst!.subject!.display!, "Todd Lerr")
		XCTAssertEqual(inst!.subject!.reference!, "uslab-example1")
		XCTAssertEqual(inst!.valueQuantity!.code!, "ug/dL")
		XCTAssertEqual(inst!.valueQuantity!.system!, NSURL(string: "http://unitsofmeasure.org")!)
		XCTAssertEqual(inst!.valueQuantity!.units!, "microgram per deciliter")
		XCTAssertEqual(inst!.valueQuantity!.value!, NSDecimalNumber(string: "65"))
	}
	
	func testObservation3() {
		let inst = instantiateFrom("obs-uslab-example1.json")
		XCTAssertNotNil(inst, "Must have instantiated a Observation instance")
	
		XCTAssertEqual(inst!.appliesDateTime!, NSDate.dateFromISOString("2014-12-03")!)
		XCTAssertEqual(inst!.identifier!.label!, "lab test result ID")
		XCTAssertEqual(inst!.identifier!.system!, NSURL(string: "http://lis.acmelabs.org/identifiers/labtestresult")!)
		XCTAssertEqual(inst!.identifier!.use!, "official")
		XCTAssertEqual(inst!.identifier!.value!, "1234")
		XCTAssertEqual(inst!.interpretation!.coding![0].code!, "H")
		XCTAssertEqual(inst!.interpretation!.coding![0].system!, NSURL(string: "http://hl7.org/fhir/v2/0078")!)
		XCTAssertEqual(inst!.issued!, NSDate.dateFromISOString("2014-12-04T15:42:15-08:00")!)
		XCTAssertEqual(inst!.name!.coding![0].code!, "10368-9")
		XCTAssertEqual(inst!.name!.coding![0].display!, "Lead [Mass/​volume] in Capillary blood")
		XCTAssertEqual(inst!.name!.coding![0].system!, NSURL(string: "http://loinc.org")!)
		XCTAssertEqual(inst!.name!.coding![1].code!, "CAPLD")
		XCTAssertEqual(inst!.name!.coding![1].display!, "Blood Lead, Capillary")
		XCTAssertEqual(inst!.name!.coding![1].system!, NSURL(string: "urn:oid:2.16.840.1.113883.3.72.5.24")!)
		XCTAssertEqual(inst!.name!.text!, "Capillary Blood Lead Screen")
		XCTAssertEqual(inst!.performer![0].display!, "Dr Leonard T Bloodraw Jr")
		XCTAssertEqual(inst!.performer![0].reference!, "uslab-example1")
		XCTAssertEqual(inst!.referenceRange![0].high!.code!, "ug/dL")
		XCTAssertEqual(inst!.referenceRange![0].high!.system!, NSURL(string: "http://unitsofmeasure.org")!)
		XCTAssertEqual(inst!.referenceRange![0].high!.units!, "microgram per deciliter")
		XCTAssertEqual(inst!.referenceRange![0].high!.value!, NSDecimalNumber(string: "5.0"))
		XCTAssertEqual(inst!.specimen!.display!, "Blood sample")
		XCTAssertEqual(inst!.specimen!.reference!, "uslab-example1")
		XCTAssertEqual(inst!.status!, "final")
		XCTAssertEqual(inst!.subject!.display!, "Todd Lerr")
		XCTAssertEqual(inst!.subject!.reference!, "uslab-example1")
		XCTAssertEqual(inst!.valueQuantity!.code!, "ug/dL")
		XCTAssertEqual(inst!.valueQuantity!.system!, NSURL(string: "http://unitsofmeasure.org")!)
		XCTAssertEqual(inst!.valueQuantity!.units!, "microgram per deciliter")
		XCTAssertEqual(inst!.valueQuantity!.value!, NSDecimalNumber(string: "65"))
	}
	
	func testObservation4() {
		let inst = instantiateFrom("obs-uslab-example2.canonical.json")
		XCTAssertNotNil(inst, "Must have instantiated a Observation instance")
	
		XCTAssertEqual(inst!.appliesDateTime!, NSDate.dateFromISOString("2014-12-05")!)
		XCTAssertEqual(inst!.identifier!.label!, "lab test result ID")
		XCTAssertEqual(inst!.identifier!.system!, NSURL(string: "http://lis.acmelabs.org/identifiers/labtestresult")!)
		XCTAssertEqual(inst!.identifier!.use!, "official")
		XCTAssertEqual(inst!.identifier!.value!, "2345")
		XCTAssertEqual(inst!.interpretation!.coding![0].code!, "A")
		XCTAssertEqual(inst!.interpretation!.coding![0].system!, NSURL(string: "http://hl7.org/fhir/v2/0078")!)
		XCTAssertEqual(inst!.issued!, NSDate.dateFromISOString("2014-12-06T15:42:15-08:00")!)
		XCTAssertEqual(inst!.name!.coding![0].code!, "43305-2")
		XCTAssertEqual(inst!.name!.coding![0].display!, "Neisseria gonorrhoeae rRNA [Presence] in Unspecified specimen by Probe and target amplification method")
		XCTAssertEqual(inst!.name!.coding![0].system!, NSURL(string: "http://loinc.org")!)
		XCTAssertEqual(inst!.name!.coding![1].code!, "GCPCR")
		XCTAssertEqual(inst!.name!.coding![1].display!, "APTIMA GC")
		XCTAssertEqual(inst!.name!.coding![1].system!, NSURL(string: "urn:oid:2.16.840.1.113883.3.72.5.24")!)
		XCTAssertEqual(inst!.name!.text!, "Neisseria gonorrhoeae by PCR")
		XCTAssertEqual(inst!.performer![0].display!, "Dr Leonard T Bloodraw Jr")
		XCTAssertEqual(inst!.performer![0].reference!, "uslab-example1")
		XCTAssertEqual(inst!.specimen!.display!, "Blood sample")
		XCTAssertEqual(inst!.specimen!.reference!, "uslab-example1")
		XCTAssertEqual(inst!.status!, "final")
		XCTAssertEqual(inst!.subject!.display!, "Todd Lerr")
		XCTAssertEqual(inst!.subject!.reference!, "uslab-example1")
		XCTAssertEqual(inst!.valueCodeableConcept!.coding![0].code!, "10828004")
		XCTAssertEqual(inst!.valueCodeableConcept!.coding![0].display!, "Positive")
		XCTAssertEqual(inst!.valueCodeableConcept!.coding![0].system!, NSURL(string: "http://snomed.info/sct")!)
		XCTAssertEqual(inst!.valueCodeableConcept!.coding![1].code!, "POS")
		XCTAssertEqual(inst!.valueCodeableConcept!.coding![1].display!, "Positive")
		XCTAssertEqual(inst!.valueCodeableConcept!.coding![1].system!, NSURL(string: "urn:oid:2.16.840.1.113883.3.72.5.24")!)
		XCTAssertEqual(inst!.valueCodeableConcept!.text!, "Positive for Neisseira gonorrheoea rRNA")
	}
	
	func testObservation5() {
		let inst = instantiateFrom("obs-uslab-example2.json")
		XCTAssertNotNil(inst, "Must have instantiated a Observation instance")
	
		XCTAssertEqual(inst!.appliesDateTime!, NSDate.dateFromISOString("2014-12-05")!)
		XCTAssertEqual(inst!.identifier!.label!, "lab test result ID")
		XCTAssertEqual(inst!.identifier!.system!, NSURL(string: "http://lis.acmelabs.org/identifiers/labtestresult")!)
		XCTAssertEqual(inst!.identifier!.use!, "official")
		XCTAssertEqual(inst!.identifier!.value!, "2345")
		XCTAssertEqual(inst!.interpretation!.coding![0].code!, "A")
		XCTAssertEqual(inst!.interpretation!.coding![0].system!, NSURL(string: "http://hl7.org/fhir/v2/0078")!)
		XCTAssertEqual(inst!.issued!, NSDate.dateFromISOString("2014-12-06T15:42:15-08:00")!)
		XCTAssertEqual(inst!.name!.coding![0].code!, "43305-2")
		XCTAssertEqual(inst!.name!.coding![0].display!, "Neisseria gonorrhoeae rRNA [Presence] in Unspecified specimen by Probe and target amplification method")
		XCTAssertEqual(inst!.name!.coding![0].system!, NSURL(string: "http://loinc.org")!)
		XCTAssertEqual(inst!.name!.coding![1].code!, "GCPCR")
		XCTAssertEqual(inst!.name!.coding![1].display!, "APTIMA GC")
		XCTAssertEqual(inst!.name!.coding![1].system!, NSURL(string: "urn:oid:2.16.840.1.113883.3.72.5.24")!)
		XCTAssertEqual(inst!.name!.text!, "Neisseria gonorrhoeae by PCR")
		XCTAssertEqual(inst!.performer![0].display!, "Dr Leonard T Bloodraw Jr")
		XCTAssertEqual(inst!.performer![0].reference!, "uslab-example1")
		XCTAssertEqual(inst!.specimen!.display!, "Blood sample")
		XCTAssertEqual(inst!.specimen!.reference!, "uslab-example1")
		XCTAssertEqual(inst!.status!, "final")
		XCTAssertEqual(inst!.subject!.display!, "Todd Lerr")
		XCTAssertEqual(inst!.subject!.reference!, "uslab-example1")
		XCTAssertEqual(inst!.valueCodeableConcept!.coding![0].code!, "10828004")
		XCTAssertEqual(inst!.valueCodeableConcept!.coding![0].display!, "Positive")
		XCTAssertEqual(inst!.valueCodeableConcept!.coding![0].system!, NSURL(string: "http://snomed.info/sct")!)
		XCTAssertEqual(inst!.valueCodeableConcept!.coding![1].code!, "POS")
		XCTAssertEqual(inst!.valueCodeableConcept!.coding![1].display!, "Positive")
		XCTAssertEqual(inst!.valueCodeableConcept!.coding![1].system!, NSURL(string: "urn:oid:2.16.840.1.113883.3.72.5.24")!)
		XCTAssertEqual(inst!.valueCodeableConcept!.text!, "Positive for Neisseira gonorrheoea rRNA")
	}
	
	func testObservation6() {
		let inst = instantiateFrom("obs-uslab-example3.canonical.json")
		XCTAssertNotNil(inst, "Must have instantiated a Observation instance")
	
		XCTAssertEqual(inst!.appliesDateTime!, NSDate.dateFromISOString("2014-12-05")!)
		XCTAssertEqual(inst!.identifier!.label!, "lab test result ID")
		XCTAssertEqual(inst!.identifier!.system!, NSURL(string: "http://lis.acmelabs.org/identifiers/labtestresult")!)
		XCTAssertEqual(inst!.identifier!.use!, "official")
		XCTAssertEqual(inst!.identifier!.value!, "3456")
		XCTAssertEqual(inst!.interpretation!.coding![0].code!, "A")
		XCTAssertEqual(inst!.interpretation!.coding![0].system!, NSURL(string: "http://hl7.org/fhir/v2/0078")!)
		XCTAssertEqual(inst!.issued!, NSDate.dateFromISOString("2014-12-06T15:42:15-08:00")!)
		XCTAssertEqual(inst!.name!.coding![0].code!, "6463-4")
		XCTAssertEqual(inst!.name!.coding![0].display!, "Bacteria identified in Unspecified specimen by Culture")
		XCTAssertEqual(inst!.name!.coding![0].system!, NSURL(string: "http://loinc.org")!)
		XCTAssertEqual(inst!.name!.coding![1].code!, "MSCBACT")
		XCTAssertEqual(inst!.name!.coding![1].display!, "Misc Culture")
		XCTAssertEqual(inst!.name!.coding![1].system!, NSURL(string: "urn:oid:2.16.840.1.113883.3.72.5.24")!)
		XCTAssertEqual(inst!.name!.text!, "Miscellaneous Culture")
		XCTAssertEqual(inst!.performer![0].display!, "Dr Leonard T Bloodraw Jr")
		XCTAssertEqual(inst!.performer![0].reference!, "uslab-example1")
		XCTAssertEqual(inst!.specimen!.display!, "Blood sample")
		XCTAssertEqual(inst!.specimen!.reference!, "uslab-example1")
		XCTAssertEqual(inst!.status!, "final")
		XCTAssertEqual(inst!.subject!.display!, "Todd Lerr")
		XCTAssertEqual(inst!.subject!.reference!, "uslab-example1")
		XCTAssertEqual(inst!.valueString!, "Moderate Growth of gram-positive cocci bacteria")
	}
	
	func testObservation7() {
		let inst = instantiateFrom("obs-uslab-example3.json")
		XCTAssertNotNil(inst, "Must have instantiated a Observation instance")
	
		XCTAssertEqual(inst!.appliesDateTime!, NSDate.dateFromISOString("2014-12-05")!)
		XCTAssertEqual(inst!.identifier!.label!, "lab test result ID")
		XCTAssertEqual(inst!.identifier!.system!, NSURL(string: "http://lis.acmelabs.org/identifiers/labtestresult")!)
		XCTAssertEqual(inst!.identifier!.use!, "official")
		XCTAssertEqual(inst!.identifier!.value!, "3456")
		XCTAssertEqual(inst!.interpretation!.coding![0].code!, "A")
		XCTAssertEqual(inst!.interpretation!.coding![0].system!, NSURL(string: "http://hl7.org/fhir/v2/0078")!)
		XCTAssertEqual(inst!.issued!, NSDate.dateFromISOString("2014-12-06T15:42:15-08:00")!)
		XCTAssertEqual(inst!.name!.coding![0].code!, "6463-4")
		XCTAssertEqual(inst!.name!.coding![0].display!, "Bacteria identified in Unspecified specimen by Culture")
		XCTAssertEqual(inst!.name!.coding![0].system!, NSURL(string: "http://loinc.org")!)
		XCTAssertEqual(inst!.name!.coding![1].code!, "MSCBACT")
		XCTAssertEqual(inst!.name!.coding![1].display!, "Misc Culture")
		XCTAssertEqual(inst!.name!.coding![1].system!, NSURL(string: "urn:oid:2.16.840.1.113883.3.72.5.24")!)
		XCTAssertEqual(inst!.name!.text!, "Miscellaneous Culture")
		XCTAssertEqual(inst!.performer![0].display!, "Dr Leonard T Bloodraw Jr")
		XCTAssertEqual(inst!.performer![0].reference!, "uslab-example1")
		XCTAssertEqual(inst!.specimen!.display!, "Blood sample")
		XCTAssertEqual(inst!.specimen!.reference!, "uslab-example1")
		XCTAssertEqual(inst!.status!, "final")
		XCTAssertEqual(inst!.subject!.display!, "Todd Lerr")
		XCTAssertEqual(inst!.subject!.reference!, "uslab-example1")
		XCTAssertEqual(inst!.valueString!, "Moderate Growth of gram-positive cocci bacteria")
	}
	
	func testObservation8() {
		let inst = instantiateFrom("obs-uslab-example4.canonical.json")
		XCTAssertNotNil(inst, "Must have instantiated a Observation instance")
	
		XCTAssertEqual(inst!.appliesDateTime!, NSDate.dateFromISOString("2014-12-05")!)
		XCTAssertEqual(inst!.identifier!.label!, "lab test result ID")
		XCTAssertEqual(inst!.identifier!.system!, NSURL(string: "http://lis.acmelabs.org/identifiers/labtestresult")!)
		XCTAssertEqual(inst!.identifier!.use!, "official")
		XCTAssertEqual(inst!.identifier!.value!, "4567")
		XCTAssertEqual(inst!.interpretation!.coding![0].code!, "H")
		XCTAssertEqual(inst!.interpretation!.coding![0].system!, NSURL(string: "http://hl7.org/fhir/v2/0078")!)
		XCTAssertEqual(inst!.issued!, NSDate.dateFromISOString("2014-12-06T15:42:15-08:00")!)
		XCTAssertEqual(inst!.name!.coding![0].code!, "6812-2")
		XCTAssertEqual(inst!.name!.coding![0].display!, "Dengue virus IgM Ab [Titer] in Serum")
		XCTAssertEqual(inst!.name!.coding![0].system!, NSURL(string: "http://loinc.org")!)
		XCTAssertEqual(inst!.name!.coding![1].code!, "DGIGM")
		XCTAssertEqual(inst!.name!.coding![1].display!, "Dengue IgM QN")
		XCTAssertEqual(inst!.name!.coding![1].system!, NSURL(string: "urn:oid:2.16.840.1.113883.3.72.5.24")!)
		XCTAssertEqual(inst!.name!.text!, "Dengue IgM Titer")
		XCTAssertEqual(inst!.performer![0].display!, "Dr Leonard T Bloodraw Jr")
		XCTAssertEqual(inst!.performer![0].reference!, "uslab-example1")
		XCTAssertEqual(inst!.referenceRange![0].text!, "<1:64")
		XCTAssertEqual(inst!.specimen!.display!, "Bloo sample")
		XCTAssertEqual(inst!.specimen!.reference!, "uslab-example1")
		XCTAssertEqual(inst!.status!, "final")
		XCTAssertEqual(inst!.subject!.display!, "Todd Lerr")
		XCTAssertEqual(inst!.subject!.reference!, "uslab-example1")
		XCTAssertEqual(inst!.valueRatio!.denominator!.value!, NSDecimalNumber(string: "256"))
		XCTAssertEqual(inst!.valueRatio!.numerator!.value!, NSDecimalNumber(string: "1"))
	}
	
	func testObservation9() {
		let inst = instantiateFrom("obs-uslab-example4.json")
		XCTAssertNotNil(inst, "Must have instantiated a Observation instance")
	
		XCTAssertEqual(inst!.appliesDateTime!, NSDate.dateFromISOString("2014-12-05")!)
		XCTAssertEqual(inst!.identifier!.label!, "lab test result ID")
		XCTAssertEqual(inst!.identifier!.system!, NSURL(string: "http://lis.acmelabs.org/identifiers/labtestresult")!)
		XCTAssertEqual(inst!.identifier!.use!, "official")
		XCTAssertEqual(inst!.identifier!.value!, "4567")
		XCTAssertEqual(inst!.interpretation!.coding![0].code!, "H")
		XCTAssertEqual(inst!.interpretation!.coding![0].system!, NSURL(string: "http://hl7.org/fhir/v2/0078")!)
		XCTAssertEqual(inst!.issued!, NSDate.dateFromISOString("2014-12-06T15:42:15-08:00")!)
		XCTAssertEqual(inst!.name!.coding![0].code!, "6812-2")
		XCTAssertEqual(inst!.name!.coding![0].display!, "Dengue virus IgM Ab [Titer] in Serum")
		XCTAssertEqual(inst!.name!.coding![0].system!, NSURL(string: "http://loinc.org")!)
		XCTAssertEqual(inst!.name!.coding![1].code!, "DGIGM")
		XCTAssertEqual(inst!.name!.coding![1].display!, "Dengue IgM QN")
		XCTAssertEqual(inst!.name!.coding![1].system!, NSURL(string: "urn:oid:2.16.840.1.113883.3.72.5.24")!)
		XCTAssertEqual(inst!.name!.text!, "Dengue IgM Titer")
		XCTAssertEqual(inst!.performer![0].display!, "Dr Leonard T Bloodraw Jr")
		XCTAssertEqual(inst!.performer![0].reference!, "uslab-example1")
		XCTAssertEqual(inst!.referenceRange![0].text!, "<1:64")
		XCTAssertEqual(inst!.specimen!.display!, "Bloo sample")
		XCTAssertEqual(inst!.specimen!.reference!, "uslab-example1")
		XCTAssertEqual(inst!.status!, "final")
		XCTAssertEqual(inst!.subject!.display!, "Todd Lerr")
		XCTAssertEqual(inst!.subject!.reference!, "uslab-example1")
		XCTAssertEqual(inst!.valueRatio!.denominator!.value!, NSDecimalNumber(string: "256"))
		XCTAssertEqual(inst!.valueRatio!.numerator!.value!, NSDecimalNumber(string: "1"))
	}
	
	func testObservation10() {
		let inst = instantiateFrom("obs-uslab-example5.canonical.json")
		XCTAssertNotNil(inst, "Must have instantiated a Observation instance")
	
		XCTAssertEqual(inst!.appliesDateTime!, NSDate.dateFromISOString("2014-12-05")!)
		XCTAssertEqual(inst!.identifier!.label!, "lab test result ID")
		XCTAssertEqual(inst!.identifier!.system!, NSURL(string: "http://lis.acmelabs.org/identifiers/labtestresult")!)
		XCTAssertEqual(inst!.identifier!.use!, "official")
		XCTAssertEqual(inst!.identifier!.value!, "1234")
		XCTAssertEqual(inst!.interpretation!.coding![0].code!, "H")
		XCTAssertEqual(inst!.interpretation!.coding![0].system!, NSURL(string: "http://hl7.org/fhir/v2/0078")!)
		XCTAssertEqual(inst!.issued!, NSDate.dateFromISOString("2014-12-06T15:42:15-08:00")!)
		XCTAssertEqual(inst!.name!.coding![0].code!, "5671-3")
		XCTAssertEqual(inst!.name!.coding![0].display!, "Lead [Mass/volume] in Blood")
		XCTAssertEqual(inst!.name!.coding![0].system!, NSURL(string: "http://loinc.org")!)
		XCTAssertEqual(inst!.name!.coding![1].code!, "BLDLD")
		XCTAssertEqual(inst!.name!.coding![1].display!, "Blood Lead")
		XCTAssertEqual(inst!.name!.coding![1].system!, NSURL(string: "urn:oid:2.16.840.1.113883.3.72.5.24")!)
		XCTAssertEqual(inst!.name!.text!, "Blood Lead")
		XCTAssertEqual(inst!.performer![0].display!, "Dr Leonard T Bloodraw Jr")
		XCTAssertEqual(inst!.performer![0].reference!, "uslab-example1")
		XCTAssertEqual(inst!.referenceRange![0].high!.code!, "ug/dL")
		XCTAssertEqual(inst!.referenceRange![0].high!.system!, NSURL(string: "http://unitsofmeasure.org")!)
		XCTAssertEqual(inst!.referenceRange![0].high!.units!, "microgram per deciliter")
		XCTAssertEqual(inst!.referenceRange![0].high!.value!, NSDecimalNumber(string: "5.0"))
		XCTAssertEqual(inst!.specimen!.display!, "Blood sample")
		XCTAssertEqual(inst!.specimen!.reference!, "uslab-example1")
		XCTAssertEqual(inst!.status!, "final")
		XCTAssertEqual(inst!.subject!.display!, "Todd Lerr")
		XCTAssertEqual(inst!.subject!.reference!, "uslab-example1")
		XCTAssertEqual(inst!.valueQuantity!.code!, "ug/dL")
		XCTAssertEqual(inst!.valueQuantity!.system!, NSURL(string: "http://unitsofmeasure.org")!)
		XCTAssertEqual(inst!.valueQuantity!.units!, "microgram per deciliter")
		XCTAssertEqual(inst!.valueQuantity!.value!, NSDecimalNumber(string: "65"))
	}
}
